local colour = {
	space = "#000009",
	depth = "#171727",
	raven = "#272743",
	ashen = "#454573",
	steel = "#383C76",
	metal = "#5358A1",
	royal = "#6070C1",
	capri = "#7993E0",
	slate = "#68709E",
	pearl = "#97A1CF",
	ultra = "#CBA6F7",
	mauve = "#734A80",
	blush = "#642F3D",
	peach = "#E8A0A0",
	amber = "#68403C",
	rouge = "#38121C",
	bazil = "#3C4F50",
	olive = "#597A69",
	paris = "#93B3AA",
}

vim.g.colors_name = "synful"

local groups = {
	Tag = { fg = colour.amber },
	Type = { fg = colour.slate },
	Macro = { fg = colour.metal },
	Added = { fg = colour.bazil },
	Error = { fg = colour.blush },
	LineNr = { fg = colour.raven },
	Normal = { fg = colour.pearl },
	String = { fg = colour.paris },
	Boolean = { fg = colour.mauve },
	Return = { fg = colour.bazil, bold = true },
	Command = { fg = colour.slate, bold = true },
	Function = { fg = colour.metal, bold = true },
	MatchParen = { fg = colour.blush, bold = true },
	CursorLineNr = { fg = colour.mauve, bold = true },
	typescriptFuncName = { fg = colour.slate, bold = true },
	DiagnositicSignInfo = { bg = colour.raven },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnderlineError = { fg = colour.blush, undercurl = true },
	DiagnosticVirtualTextWarn = { fg = colour.peach, bg = colour.amber },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticUnderlineHint = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.paris, undercurl = true },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.raven },
	LspFloatWinNormal = { bg = colour.space },
	LspFloatWinBorder = { link = "FloatBorder" },
	LspSagaBorderTitle = { link = "String" },
	LspSagaCodeActionBorder = { link = "FloatBorder" },
	LspSagaCodeActionContent = { link = "Delimiter" },
	LspSagaCodeActionTitle = { link = "Delimiter" },
	LspSagaDefPreviewBorder = { link = "FloatBorder" },
	LspSagaFinderSelection = { link = "Delimiter" },
	LspSagaHoverBorder = { link = "FloatBorder" },
	LspSagaRenameBorder = { link = "FloatBorder" },
	LspSagaSignatureHelpBorder = { link = "FloatBorder" },
	FloatBorder = { fg = colour.raven, bg = "NONE" },
	CurSearch = { fg = colour.ultra, bg = colour.mauve },
	FlashLabel = { fg = colour.ultra, bg = colour.steel, bold = true },
	NotifyTRACEIcon = { fg = colour.ultra },
	Removed = { fg = colour.rouge },
	Delimiter = { fg = colour.ashen },
	TargetWord = { fg = colour.capri },
	CursorLine = { bg = colour.depth },
	NonText = { fg = "NONE", bg = "NONE" },
	NotifyBackground = { bg = "NONE" },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	StatusLine = { bg = colour.depth },
	PmenuSbar = { fg = colour.steel, bg = colour.depth },
	PmenuThumb = { fg = colour.depth, bg = colour.depth },
	PmenuSel = { bg = colour.raven, fg = colour.pearl },
	Pmenu = { fg = colour.slate, bg = colour.depth },
	LazyButton = { fg = colour.royal, bg = colour.depth },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	Visual = { fg = colour.capri, bg = colour.steel, bold = true },
	constructor = { fg = colour.steel, bold = true },
	tsxTagName = { fg = colour.steel, bold = true },
	keyword = { fg = colour.olive, bold = true },
	NotifyWARNIcon = { fg = colour.peach },
	NotifyWARNTitle = { fg = colour.peach },
	Directory = { fg = colour.steel, bold = true },
	Todo = { fg = colour.royal, bold = true },
	DiagnosticUnnecessary = { fg = colour.ashen },
	Comment = { fg = colour.ashen, italic = true },
	CmpItemMenu = { fg = colour.ashen },
	CmpItemKindClass = { link = "Macro" },
	CmpItemKind = { link = "LineNr" },
	CmpItemKindColor = { link = "LineNr" },
	CmpItemAbbrMatch = { link = "Function" },
	CmpItemAbbrMatchFuzzy = { link = "Macro" },
	CmpItemKindMatchFuzzy = { fg = colour.paris },
	CmpItemAbbrMatchDefault = { fg = colour.bazil },
	CmpItemAbbrMatchFuzzyDefault = { fg = colour.amber },
	CmpItemKindDefault = { fg = colour.ashen },
	Whitespace = { fg = colour.space },
	WinSeparator = { fg = colour.depth },
	tsxAttrib = { fg = colour.capri },
	typescriptGlobal = { fg = colour.capri },
	typescriptTypeArguments = { fg = colour.steel },
	typescriptTypeBrackets = { fg = colour.steel },
	Italic = { italic = true },
	Label = { link = "Macro" },
	Quote = { link = "Macro" },
	Changed = { link = "Type" },
	Define = { link = "Macro" },
	Field = { link = "Normal" },
	PreProc = { link = "Type" },
	Repeat = { link = "Macro" },
	Title = { link = "Normal" },
	Debug = { link = "Boolean" },
	Float = { link = "Boolean" },
	Include = { link = "Macro" },
	Noise = { link = "Boolean" },
	Special = { link = "Macro" },
	Constant = { link = "Macro" },
	ErrorMsg = { link = "Error" },
	Folded = { link = "Comment" },
	Ignore = { link = "Comment" },
	LazyDimmed = { link = "Tag" },
	Number = { link = "Boolean" },
	Conceal = { link = "Comment" },
	Exception = { link = "Macro" },
	Operator = { link = "LineNr" },
	SpellCap = { link = "LineNr" },
	WinBarNC = { link = "LineNr" },
	tmuxString = { link = "Todo" },
	variable = { link = "Normal" },
	vimOper = { link = "Boolean" },
	IncSearch = { link = "Visual" },
	LazyNormal = { link = "Pmenu" },
	LazyProp = { link = "Boolean" },
	SpecialKey = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	Statement = { link = "Return" },
	WinBar = { link = "Delimiter" },
	tsxRegion = { link = "Normal" },
	tsxString = { link = "String" },
	tsxTag = { link = "Delimiter" },
	Character = { link = "Boolean" },
	Identifier = { link = "Normal" },
	NormalFloat = { link = "Pmenu" },
	SignColumn = { link = "LineNr" },
	htmlTag = { link = "Delimiter" },
	htmlTagName = { link = "Macro" },
	tsxJsBlock = { link = "Normal" },
	vimEnvvar = { link = "Boolean" },
	vimVar = { link = "TargetWord" },
	zshCommands = { link = "Macro" },
	DiagnosticWarn = { link = "Tag" },
	LazyCommit = { link = "Boolean" },
	cssAttrRegion = { link = "Todo" },
	cssClassName = { link = "Macro" },
	cssNoise = { link = "Delimiter" },
	cssTagName = { link = "Boolean" },
	tsxEqual = { link = "Delimiter" },
	vimUserFunc = { link = "Normal" },
	ColorColumn = { link = "NonText" },
	FloatShadow = { link = "NonText" },
	GitGutterAdd = { link = "Return" },
	SpecialChar = { link = "Boolean" },
	WildMenu = { link = "MatchParen" },
	cssBraces = { link = "Delimiter" },
	tsxCloseTagName = { link = "Tag" },
	typescriptCall = { link = "Todo" },
	vimOperParen = { link = "LineNr" },
	DiffChange = { link = "Delimiter" },
	KeywordReturn = { link = "Return" },
	Conditional = { link = "Character" },
	DiagnosticError = { link = "Error" },
	GitGutterChange = { link = "Macro" },
	KeywordFunction = { link = "Macro" },
	NotifyDEBUGBody = { link = "Error" },
	NotifyERRORIcon = { link = "Error" },
	NotifyINFOBody = { link = "Normal" },
	NotifyINFOIcon = { link = "String" },
	NotifyWARNBody = { link = "Normal" },
	cssDefinition = { link = "Changed" },
	tmuxFormatString = { link = "Todo" },
	tsxCloseTag = { link = "Delimiter" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { link = "Changed" },
	FoldColumn = { link = "FloatBorder" },
	NotifyERRORBody = { link = "Normal" },
	NotifyERRORTitle = { link = "Error" },
	NotifyINFOTitle = { link = "String" },
	NotifyTRACEBody = { link = "Normal" },
	SpecialComment = { link = "Comment" },
	TelescopeMatching = { link = "Todo" },
	TelescopeNormal = { link = "Normal" },
	cssPseudoClassId = { link = "Added" },
	typescriptArray = { link = "Normal" },
	typescriptBlock = { link = "Normal" },
	typescriptProp = { link = "Boolean" },
	typescriptTemplate = { link = "Tag" },
	FlashBackdrop = { link = "Delimiter" },
	GitGutterDelete = { link = "Boolean" },
	NvimInternalError = { link = "Error" },
	cssClassNameDot = { link = "Boolean" },
	typescriptMember = { link = "Normal" },
	typescriptTernaryOp = { link = "Tag" },
	EndOfBuffer = { link = "StatusLineNC" },
	NotifyDEBUGIcon = { link = "Commment" },
	tsxCloseString = { link = "Delimiter" },
	typescriptDefault = { link = "Return" },
	typescriptOperator = { link = "Added" },
	typescriptTemplateSB = { link = "Tag" },
	typescriptVariable = { link = "Macro" },
	CodeiumSuggestion = { link = "Comment" },
	GitGutterChangeDelete = { link = "Tag" },
	NotifyDEBUGTitle = { link = "Commment" },
	typescriptBinaryOp = { link = "Number" },
	typescriptUnaryOp = { link = "Boolean" },
	FloatShadowThrough = { link = "NonText" },
	TelescopePromptTitle = { link = "Macro" },
	typescriptAssign = { link = "Delimiter" },
	typescriptBraces = { link = "Delimiter" },
	typescriptFuncCallArg = { link = "Type" },
	typescriptParens = { link = "Delimiter" },
	typescriptProperty = { link = "Boolean" },
	TelescopeBorder = { link = "FloatBorder" },
	typescriptArrayMethod = { link = "Macro" },
	typescriptFuncKeyword = { link = "Macro" },
	NotifyINFOBorder = { link = "FloatBorder" },
	NotifyWARNBorder = { link = "FloatBorder" },
	typescriptAliasKeyword = { link = "Macro" },
	DiagnosticInformation = { link = "Changed" },
	NotifyDEBUGBorder = { link = "FloatBorder" },
	NotifyERRORBorder = { link = "FloatBorder" },
	NotifyTRACEBorder = { link = "FloatBorder" },
	TelescopePromptPrefix = { link = "Boolean" },
	tsxCloseComponentName = { link = "Keyword" },
	typescriptArrowFunc = { link = "Delimiter" },
	typescriptArrowFuncArg = { link = "Normal" },
	typescriptConditional = { link = "Boolean" },
	typescriptDotNotation = { link = "Boolean" },
	tsxIntrinsicTagName = { link = "tsxTagName" },
	typescriptArrowFuncDef = { link = "Comment" },
	typescriptObjectSpread = { link = "Boolean" },
	cssPositioningAttr = { link = "@keyword.lua" },
	typescriptObjectColon = { link = "Delimiter" },
	typescriptObjectLiteral = { link = "Boolean" },
	typescriptPredefinedType = { link = "String" },
	typescriptTypeBracket = { link = "Delimiter" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	NotifyTRACETitle = { link = "NotifyTRACEIcon" },
	TelescopePreviewMatch = { link = "MatchParen" },
	TelescopeSelectionCaret = { link = "PmenuSel" },
	typescriptBOMHistoryProp = { link = "Boolean" },
	typescriptIdentifierName = { link = "Boolean" },
	typescriptObjectLabel = { link = "TargetWord" },
	typescriptTypeAnnotation = { link = "Comment" },
	NoiceCmdlinePopupBorder = { link = "FloatBorder" },
	typescriptMemberOptionality = { link = "Boolean" },
	typescriptTemplateSubstitution = { link = "Todo" },
	typescriptAsyncFuncKeyword = { link = "Character" },
	DiagnosticVirtualTextError = { link = "MatchParen" },
	TelescopeSelection = { link = "PmenuSel" },

	----------------
	-- treesitter --
	----------------
	["@function.lua"] = { fg = colour.royal, bold = true },
	["@keyword.lua"] = { fg = colour.olive },
	["@keyword.conditional.lua"] = { link = "Boolean" },
	["@constructor.lua"] = { link = "Delimiter" },
	["@keyword.function.lua"] = { link = "Macro" },
	["@keyword.return.lua"] = { link = "Return" },
	["@operator.lua"] = { link = "Operator" },
	["@variable"] = { link = "Normal" },
	["@comment.documentation"] = { link = "Comment" },
	["@comment.error"] = { link = "Error" },
	["@comment.note"] = { link = "Return" },
	["@comment.todo"] = { link = "Todo" },
	["@comment.warning"] = { link = "Tag" },
	-- ["@constant.builtin.lua"] = { link = "Boolean" },
	-- ["@keyword.conditional.ternary"] = { link = "Tag" },
	-- ["@keyword.operator.lua"] = { link = "Boolean" },
	-- ["@punctuation.bracket"] = { link = "LineNr" },
	-- ["@punctuation.bracket.lua"] = { link = "LineNr" },
	-- ["@punctuation.delimiter"] = { link = "Delimiter" },
	-- ["@punctuation.special"] = { link = "LineNr" },
	-- ["@string.special.path"] = { link = "@keyword.lua" },
	-- ["@tag.builtin"] = { link = "@tag" },
	-- ["@tag.delimiter"] = { link = "LineNr" },
	-- ["@comment"] = { fg = raven },
	-- ["@spell"] = { fg = ashen },
	-- ["@string.special.url"] = { fg = royal,  },
	-- ["@tag"] = { fg = steel, bold = true },
	-- ["@tag.attribute"] = { fg = capri },
	-- PreCondit = { link = "LineNr" },
	-- TabLine = { link = "LineNr" },
	-- Typedef = { link = "LineNr" },
	-- WarningMsg = { link = "LineNr" },
	-- cssPseudoClass = { link = "LineNr" },
	-- gitcommitDiscarded = { link = "LineNr" },
	-- gitcommitSelected = { link = "LineNr" },
	-- gitcommitUnmergedArrow = { link = "LineNr" },
	-- gitcommitUnmergedFile = { link = "LineNr" },
	-- gitcommitUntracked = { link = "LineNr" },
	-- htmlEndTag = { link = "LineNr" },
	-- jsonBraces = { link = "LineNr" },
	-- jsoncBraces = { link = "LineNr" },
	-- muttrcAliasEncEmail = { link = "LineNr" },
	-- muttrcAliasKey = { link = "LineNr" },
	-- shVarAssign = { link = "LineNr" },
	-- tmuxAssignment = { link = "LineNr" },
	-- typescriptDefaultParam = { link = "LineNr" },
	-- zshBrackets = { link = "LineNr" },
	-- zshLineNr = { link = "LineNr" },
	-- zshParentheses = { link = "LineNr" },
	-- zshSubst = { link = "LineNr" },
	-- Underlined = { underline = true },
	-- MiniCursorword = { bg = blush },
	-- zshFunction = { fg = peach },
	-- DefinitionCount = { link = "Delimiter" },
	-- DefinitionIcon = { link = "Macro" },
	-- DiffDelete = { link = "Boolean" },
	-- DiffText = { link = "Macro" },
	-- ReferencesCount = { link = "Delimiter" },
	-- ReferencesIcon = { link = "Delimiter" },
	-- SpellLocal = { link = "Tag" },
	-- SpellRare = { link = "Macro" },
	-- StorageClass = { link = "Boolean" },
	-- Structure = { link = "Normal" },
	-- Substitute = { link = "Normal" },
	-- TabLineFill = { link = "Normal" },
	-- TabLineSel = { link = "mailSubject" },
	-- VertSplit = { link = "NonText" },
	-- VisualNOS = { link = "Normal" },
	-- cssAtKeyword = { link = "Tag" },
	-- cssBackgroundProp = { link = "Normal" },
	-- cssBorderProp = { link = "Normal" },
	-- cssBoxProp = { link = "Normal" },
	-- cssColorProp = { link = "Normal" },
	-- cssFlexibleBoxProp = { link = "Normal" },
	-- cssFontAttr = { link = "Todo" },
	-- cssFontProp = { link = "Normal" },
	-- cssFunctionName = { link = "Todo" },
	-- cssGradientAttr = { link = "Todo" },
	-- cssIEUIProp = { link = "Normal" },
	-- cssIdentifier = { link = "Todo" },
	-- cssInteractProp = { link = "Normal" },
	-- cssListProp = { link = "Normal" },
	-- cssMediaProp = { link = "Normal" },
	-- cssPageProp = { link = "Normal" },
	-- cssPositioningProp = { link = "Normal" },
	-- cssTextProp = { link = "Normal" },
	-- cssTransformProp = { link = "Normal" },
	-- cssTransitionProp = { link = "Normal" },
	-- cssUIProp = { link = "Normal" },
	-- cssVendor = { link = "Boolean" },
	-- diffAdded = { link = "KeywordReturn" },
	-- diffRemoved = { link = "Boolean" },
	-- gitcommitBranch = { link = "Boolean" },
	-- gitcommitComment = { link = "Comment" },
	-- gitcommitDiscardedArrow = { link = "Boolean" },
	-- gitcommitDiscardedFile = { link = "Boolean" },
	-- gitcommitDiscardedType = { link = "Boolean" },
	-- gitcommitNoBranch = { link = "Boolean" },
	-- gitcommitOverflow = { link = "Boolean" },
	-- gitcommitSelectedArrow = { link = "KeywordReturn" },
	-- gitcommitSelectedFile = { link = "KeywordReturn" },
	-- gitcommitSelectedType = { link = "KeywordReturn" },
	-- gitcommitSummary = { link = "Normal" },
	-- gitcommitUnmerged = { link = "KeywordReturn" },
	-- gitcommitUntrackedFile = { link = "Macro" },
	-- htmlArg = { link = "Todo" },
	-- htmlHead = { link = "Macro" },
	-- htmlSpecialTagName = { link = "Macro" },
	-- htmlTagN = { link = "Macro" },
	-- jsonQuote = { link = "Macro" },
	-- jsoncBoolean = { link = "Boolean" },
	-- mailEmail = { link = "Boolean" },
	-- mailHeader = { link = "Delimiter" },
	-- mailHeaderEmail = { link = "Boolean" },
	-- mailHeaderKey = { link = "Delimiter" },
	-- muttrcAliasNameNoParens = { link = "Normal" },
	-- muttrcColor = { link = "Return" },
	-- muttrcColorLine = { link = "Return" },
	-- muttrcEmail = { link = "Return" },
	-- muttrcSetStrAssignment = { link = "Boolean" },
	-- shDerefSimple = { link = "Todo" },
	-- shDo = { link = "Boolean" },
	-- shDoubleQuote = { link = "String" },
	-- shEcho = { link = "String" },
	-- shQuote = { link = "shDoubleQuote" },
	-- shStatement = { link = "Macro" },
	-- shTestOpr = { link = "Boolean" },
	-- shVar = { link = "Boolean" },
	-- shWrapLineOperator = { link = "Number" },
	-- tmuxFlags = { link = "Boolean" },
	-- tmuxOptions = { link = "Normal" },
	-- tmuxVariableExpansion = { link = "Return" },
	-- tmuxVariableExtension = { link = "Todo" },
	-- typescriptBOM = { link = "Normal" },
	-- typescriptBOMLocationMethod = { link = "Macro" },
	-- typescriptBOMWindowMethod = { link = "Return" },
	-- typescriptBOMWindowProp = { link = "Boolean" },
	-- typescriptConditionalParen = { link = "Todo" },
	-- typescriptDOMDocProp = { link = "Boolean" },
	-- typescriptDOMWindowProp = { link = "Boolean" },
	-- typescriptDestructureVariable = { link = "Normal" },
	-- typescriptDomDocProp = { link = "Boolean" },
	-- typescriptEndColumns = { link = "Comment" },
	-- typescriptEnum = { link = "Normal" },
	-- typescriptEnumKeyword = { link = "Macro" },
	-- typescriptExceptions = { link = "Boolean" },
	-- typescriptExport = { link = "Keyword" },
	-- typescriptFileReaderProp = { link = "Boolean" },
	-- typescriptFuncCallArg = { link = "Macro" },
	-- typescriptFuncComma = { link = "Comment" },
	-- typescriptFuncImpl = { link = "Comment" },
	-- typescriptFuncTypeArrow = { link = "Comment" },
	-- typescriptHeadersMethod = { link = "Macro" },
	-- typescriptImport = { link = "Macro" },
	-- typescriptJSONStaticMethod = { link = "Boolean" },
	-- typescriptMathStaticMethod = { link = "KeywordReturn" },
	-- typescriptNull = { link = "Boolean" },
	-- typescriptParenExp = { link = "Normal" },
	-- typescriptPaymentShippingOptionProp = { link = "Boolean" },
	-- typescriptResponseProp = { link = "Boolean" },
	-- typescriptStatementKeyword = { link = "Return" },
	-- typescriptStringMethod = { link = "Macro" },
	-- typescriptTry = { link = "Boolean" },
	-- typescriptTypeCase = { link = "Macro" },
	-- typescriptTypeReference = { link = "Return" },
	-- typescriptURLUtilsProp = { link = "Boolean" },
	-- typescriptVariableDeclaration = { link = "Normal" },
	-- typescriptXHRMethod = { link = "Macro" },
	-- xmlEndTag = { link = "Macro" },
	-- zshDeref = { link = "Todo" },
	-- zshKeyword = { link = "Normal" },
	-- zshNumber = { link = "Number" },
	-- zshOptStart = { link = "Macro" },
	-- zshOption = { link = "Macro" },
	-- zshPrecommand = { link = "Macro" },
	-- zshRedirect = { link = "Todo" },
	-- zshShortDeref = { link = "Tag" },
	-- zshString = { link = "String" },
	-- zshStringDelimiter = { link = "String" },
	-- zshSubstDelim = { link = "Tag" },
	-- zshTodo = { link = "Todo" },
	-- zslhComment = { link = "Comment" },
	-- mailSubject = { fg = slate, bold = true },
	-- typescriptDOMFormProp = {link = "Type"},
	-- Cursor = { fg = slate, bg = mauve },
}

--------------------------------------------------
-- Execute
--------------------------------------------------
for group, opts in pairs(groups) do
	vim.api.nvim_set_hl(0, group, opts)
end
