-- ┌─┐┬ ┬┌┐┌┌─┐┬ ┬┬
-- └─┐└┬┘│││├┤ │ ││
-- └─┘ ┴ ┘└┘└  └─┘┴─┘

local colour = {
	space = "#000009",
	depth = "#191929",
	raven = "#292941",
	ashen = "#353561",
	steel = "#383C76",
	metal = "#5358A1",
	royal = "#6070C1",
	capri = "#7993E0",
	slate = "#68709E",
	pearl = "#97A1CF",
	ghost = "#BEBEEF",
	ultra = "#CBA6F7",
	mauve = "#734A80",
	blush = "#642F3D",
	peach = "#E8A0A0",
	amber = "#68403C",
	rouge = "#38121C",
	bazil = "#3C4F50",
	olive = "#597A69",
	paris = "#93B3AA",
}

vim.g.colors_name = "synful"

local groups = {
	Added = { fg = colour.bazil },
	Boolean = { fg = colour.mauve },
	Changed = { link = "Type" },
	Character = { link = "Boolean" },
	CmpItemAbbrMatch = { fg = colour.mauve, bold = true },
	CmpItemAbbrMatchDefault = { fg = colour.bazil },
	CmpItemAbbrMatchFuzzy = { fg = colour.mauve, bold = true },
	CmpItemAbbrMatchFuzzyDefault = { fg = colour.amber },
	CmpItemKind = { link = "LineNr" },
	CmpItemKindClass = { link = "Macro" },
	CmpItemKindColor = { link = "LineNr" },
	CmpItemKindDefault = { fg = colour.raven },
	CmpItemKindMatchFuzzy = { fg = colour.paris },
	CmpItemKindSnippet = { fg = colour.pearl },
	CmpItemMenu = { link = "LineNr" },
	CodeiumSuggestion = { link = "Comment" },
	ColorColumn = { link = "NonText" },
	Command = { fg = colour.slate, bold = true },
	Comment = { fg = colour.ashen, italic = true },
	Conceal = { link = "Comment" },
	Conditional = { link = "Character" },
	Constant = { link = "Macro" },
	CurSearch = { fg = colour.ultra, bg = colour.mauve },
	CursorLine = { bg = colour.depth },
	CursorLineNr = { fg = colour.mauve, bold = true },
	Debug = { link = "Boolean" },
	Define = { link = "Macro" },
	Delimiter = { fg = colour.ashen },
	DiagnositicSignInfo = { bg = colour.raven },
	DiagnosticError = { link = "Error" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { link = "Changed" },
	DiagnosticInformation = { link = "Changed" },
	DiagnosticUnderlineError = { fg = colour.blush, undercurl = true },
	DiagnosticUnderlineHint = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnnecessary = { fg = colour.ashen },
	DiagnosticVirtualTextError = { link = "MatchParen" },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.raven },
	DiagnosticVirtualTextWarn = { fg = colour.peach, bg = colour.amber },
	DiagnosticWarn = { link = "Tag" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	DiffChange = { link = "Delimiter" },
	Directory = { fg = colour.steel, bold = true },
	EndOfBuffer = { link = "StatusLineNC" },
	Error = { fg = colour.blush },
	ErrorMsg = { link = "Error" },
	Exception = { link = "Macro" },
	Field = { link = "Normal" },
	FlashBackdrop = { link = "Delimiter" },
	FlashLabel = { fg = colour.ultra, bg = colour.steel, bold = true },
	Float = { link = "Boolean" },
	FloatBorder = { fg = colour.raven, bg = "NONE" },
	FloatShadow = { link = "NonText" },
	FloatShadowThrough = { link = "NonText" },
	FoldColumn = { link = "FloatBorder" },
	Folded = { link = "Comment" },
	Function = { fg = colour.metal, bold = true },
	GitGutterAdd = { link = "Return" },
	GitGutterChange = { link = "Macro" },
	GitGutterChangeDelete = { link = "Tag" },
	GitGutterDelete = { link = "Boolean" },
	Identifier = { link = "Normal" },
	Ignore = { link = "Comment" },
	IncSearch = { link = "Visual" },
	Include = { link = "Macro" },
	Italic = { italic = true },
	KeywordFunction = { link = "Macro" },
	KeywordReturn = { link = "Return" },
	Label = { link = "Macro" },
	LazyButton = { fg = colour.royal, bg = colour.depth },
	LazyCommit = { link = "Boolean" },
	LazyDimmed = { link = "Tag" },
	LazyNormal = { link = "Pmenu" },
	LazyProp = { link = "Boolean" },
	LineNr = { fg = colour.raven },
	Macro = { fg = colour.metal },
	MatchParen = { fg = colour.blush, bold = true },
	NoiceCmdlinePopupBorder = { link = "FloatBorder" },
	Noise = { link = "Boolean" },
	NonText = { fg = "NONE", bg = "NONE" },
	Normal = { fg = colour.pearl },
	NormalFloat = { link = "Pmenu" },
	NotifyBackground = { bg = "NONE" },
	NotifyDEBUGBody = { link = "Error" },
	NotifyDEBUGBorder = { link = "FloatBorder" },
	NotifyDEBUGIcon = { link = "Commment" },
	NotifyDEBUGTitle = { link = "Commment" },
	NotifyERRORBody = { link = "Normal" },
	NotifyERRORBorder = { link = "FloatBorder" },
	NotifyERRORIcon = { link = "Error" },
	NotifyERRORTitle = { link = "Error" },
	NotifyINFOBody = { link = "Normal" },
	NotifyINFOBorder = { link = "FloatBorder" },
	NotifyINFOIcon = { link = "String" },
	NotifyINFOTitle = { link = "String" },
	NotifyTRACEBody = { link = "Normal" },
	NotifyTRACEBorder = { link = "FloatBorder" },
	NotifyTRACEIcon = { fg = colour.ultra },
	NotifyTRACETitle = { link = "NotifyTRACEIcon" },
	NotifyWARNBody = { link = "Normal" },
	NotifyWARNBorder = { link = "FloatBorder" },
	NotifyWARNIcon = { fg = colour.peach },
	NotifyWARNTitle = { fg = colour.peach },
	Number = { link = "Boolean" },
	NvimInternalError = { link = "Error" },
	Operator = { link = "LineNr" },
	Pmenu = { fg = colour.ashen, bg = colour.depth },
	PmenuSbar = { fg = colour.steel, bg = colour.depth },
	PmenuSel = { bg = colour.ashen, fg = colour.slate },
	PmenuThumb = { fg = colour.ashen, bg = colour.depth },
	PreProc = { link = "Type" },
	Quote = { link = "Macro" },
	Removed = { fg = colour.rouge },
	Repeat = { link = "Macro" },
	Return = { fg = colour.bazil, bold = true },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	SignColumn = { link = "LineNr" },
	Special = { link = "Macro" },
	SpecialChar = { link = "Boolean" },
	SpecialComment = { link = "Comment" },
	SpecialKey = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	SpellCap = { link = "LineNr" },
	Statement = { link = "Return" },
	StatusLine = { bg = colour.depth },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	String = { fg = colour.paris },
	Tag = { fg = colour.amber },
	TargetWord = { fg = colour.capri },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopeMatching = { link = "Todo" },
	TelescopeNormal = { link = "Normal" },
	TelescopePreviewMatch = { link = "MatchParen" },
	TelescopePromptPrefix = { link = "Boolean" },
	TelescopePromptTitle = { link = "Macro" },
	TelescopeSelection = { bg = colour.depth },
	TelescopeSelectionCaret = { link = "PmenuSel" },
	Title = { link = "Normal" },
	Todo = { fg = colour.royal, bold = true },
	Type = { fg = colour.slate },
	Visual = { fg = colour.capri, bg = colour.steel, bold = true },
	Whitespace = { fg = colour.space },
	WildMenu = { link = "MatchParen" },
	WinBarNC = { link = "LineNr" },
	WinBar = { link = "Delimiter" },
	WinSeparator = { fg = colour.steel },
	["@comment.documentation"] = { link = "Comment" },
	["@comment.error"] = { link = "Error" },
	["@comment.note"] = { link = "Return" },
	["@comment.todo"] = { link = "Todo" },
	["@comment.warning"] = { link = "Tag" },
	["@constructor.lua"] = { link = "Delimiter" },
	["@function.lua"] = { fg = colour.royal, bold = true },
	["@keyword.conditional.lua"] = { link = "Boolean" },
	["@keyword.function.lua"] = { link = "Macro" },
	["@keyword.lua"] = { fg = colour.olive },
	["@keyword.return.lua"] = { link = "Return" },
	["@operator.lua"] = { link = "Operator" },
	["@variable"] = { link = "Normal" },
	constructor = { fg = colour.steel, bold = true },
	cssAttrRegion = { link = "Todo" },
	cssBraces = { link = "Delimiter" },
	cssClassName = { link = "Macro" },
	cssClassNameDot = { link = "Boolean" },
	cssDefinition = { link = "Changed" },
	cssNoise = { link = "Delimiter" },
	cssPositioningAttr = { link = "@keyword.lua" },
	cssPseudoClassId = { link = "Added" },
	cssTagName = { link = "Boolean" },
	htmlTag = { link = "Delimiter" },
	htmlTagName = { link = "Macro" },
	keyword = { fg = colour.olive, bold = true },
	tmuxFormatString = { link = "Todo" },
	tmuxString = { link = "Todo" },
	tsxAttrib = { fg = colour.capri },
	tsxCloseComponentName = { link = "Keyword" },
	tsxCloseString = { link = "Delimiter" },
	tsxCloseTag = { link = "Delimiter" },
	tsxCloseTagName = { link = "Tag" },
	tsxEqual = { link = "Delimiter" },
	tsxIntrinsicTagName = { link = "tsxTagName" },
	tsxJsBlock = { link = "Normal" },
	tsxRegion = { link = "Normal" },
	tsxString = { link = "String" },
	tsxTag = { link = "Delimiter" },
	tsxTagName = { fg = colour.steel, bold = true },
	typescriptAliasKeyword = { link = "Macro" },
	typescriptArray = { link = "Normal" },
	typescriptArrayMethod = { link = "Macro" },
	typescriptArrowFunc = { link = "Delimiter" },
	typescriptArrowFuncArg = { link = "Normal" },
	typescriptArrowFuncDef = { link = "Comment" },
	typescriptAssign = { link = "Delimiter" },
	typescriptAsyncFuncKeyword = { link = "Character" },
	typescriptBOMHistoryProp = { link = "Boolean" },
	typescriptBinaryOp = { link = "Number" },
	typescriptBlock = { link = "Normal" },
	typescriptBraces = { link = "Delimiter" },
	typescriptCall = { link = "Todo" },
	typescriptConditional = { link = "Boolean" },
	typescriptDefault = { link = "Return" },
	typescriptDotNotation = { link = "Boolean" },
	typescriptFuncCallArg = { link = "Type" },
	typescriptFuncKeyword = { link = "Macro" },
	typescriptFuncName = { fg = colour.slate, bold = true },
	typescriptGlobal = { fg = colour.capri },
	typescriptIdentifierName = { link = "Boolean" },
	typescriptMember = { link = "Normal" },
	typescriptMemberOptionality = { link = "Boolean" },
	typescriptObjectColon = { link = "Delimiter" },
	typescriptObjectLabel = { link = "TargetWord" },
	typescriptObjectLiteral = { link = "Boolean" },
	typescriptObjectSpread = { link = "Boolean" },
	typescriptOperator = { link = "Added" },
	typescriptParens = { link = "Delimiter" },
	typescriptPredefinedType = { link = "String" },
	typescriptProp = { link = "Boolean" },
	typescriptProperty = { link = "Boolean" },
	typescriptTemplate = { link = "Tag" },
	typescriptTemplateSB = { link = "Tag" },
	typescriptTemplateSubstitution = { link = "Todo" },
	typescriptTernaryOp = { link = "Tag" },
	typescriptTypeAnnotation = { link = "Comment" },
	typescriptTypeArguments = { fg = colour.steel },
	typescriptTypeBracket = { link = "Delimiter" },
	typescriptTypeBrackets = { fg = colour.steel },
	typescriptUnaryOp = { link = "Boolean" },
	typescriptVariable = { link = "Macro" },
	variable = { link = "Normal" },
	vimEnvvar = { link = "Boolean" },
	vimOper = { link = "Boolean" },
	vimOperParen = { link = "LineNr" },
	vimUserFunc = { link = "Normal" },
	vimVar = { link = "TargetWord" },

	---------
	-- zsh --
	---------
	zshCommands = { link = "Macro" },
	shQuote = { link = "String" },

	-------------------
	-- custom groups --
	-------------------
	Shell = { fg = colour.depth },
	WinBarPath = { fg = colour.ashen, bg = colour.depth },
	HarpoonActive = { link = "Type" },
	HarpoonInactive = { link = "LineNr" },
	WinBarPathDividers = { fg = colour.amber, bg = colour.depth },
}

-------------
-- Execute --
-------------
for group, opts in pairs(groups) do
	vim.api.nvim_set_hl(0, group, opts)
end

return { colour = colour }
