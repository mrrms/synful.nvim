local colour = require("synful.colour")

return {
	Bold = { bold = true },
	Boolean = { fg = colour.mauve },
	Macro = { fg = colour.royal },
	Character = { fg = colour.mauve, italic = true },
	ColorColumn = { link = "NonText" },
	luaBrackets = { fg = colour.steel },
	luaLoop = { link = "Number" },
	CodeiumSuggestion = { fg = colour.purps },
	Command = { fg = colour.slate, bold = true },
	Comment = { fg = colour.ashen, italic = true },
	Conceal = { fg = colour.purps },
	Conditional = { fg = colour.mauve, italic = true },
	Constant = { link = "Macro" },
	Cursor = { fg = colour.olive },
	CursorLine = { bg = colour.depth },
	CursorLineNr = { bg = colour.depth },
	Debug = { link = "Boolean" },
	Define = { link = "Macro" },
	Delimiter = { fg = colour.steel },
	DiffAdd = { link = "String" },
	DiffChange = { link = "LineNr" },
	DiffDelete = { link = "Boolean" },
	DiffText = { link = "Macro" },
	Directory = { fg = colour.steel, bold = true },
	EndOfBuffer = { link = "StatusLineNC" },
	Error = { fg = colour.blush },
	ErrorMsg = { fg = colour.blush },
	Exception = { link = "Macro" },
	Field = { link = "Title" },
	FlashBackdrop = { fg = colour.steel },
	FlashLabel = { fg = colour.ultra, bg = colour.steel, bold = true },
	Float = { link = "Boolean" },
	FloatBorder = { fg = colour.raven },
	FloatShadow = { link = "NonText" },
	FloatShadowThrough = { link = "NonText" },
	FoldColumn = { link = "FloatBorder" },
	Folded = { fg = colour.purps, italic = true },
	Function = { fg = colour.steel, bold = true },
	GitGutterAdd = { link = "KeywordReturn" },
	GitGutterChange = { link = "LineNr" },
	GitGutterChangeDelete = { link = "Tag" },
	GitGutterDelete = { link = "Boolean" },
	Identifier = { fg = colour.pearl },
	Ignore = { link = "LineNr" },
	IncSearch = { link = "Visual" },
	Include = { link = "Macro" },
	Italic = { italic = true },
	Keyword = { link = "Macro" },
	KeywordFunction = { link = "Macro" },
	KeywordReturn = { fg = colour.olive },
	Label = { fg = colour.royal },
	LazyCommit = { link = "Boolean" },
	LazyDimmed = { link = "Tag" },
	LazyNormal = { link = "pmenu" },
	LazyProp = { link = "Boolean" },
	LineNr = { fg = colour.ashen },
	MatchParen = { fg = colour.blush, bold = true },
	NoiceCmdlinePopupBorder = { link = "FloatBorder" },
	typescriptAliasKeyword = { fg = colour.olive },
	typescriptMemberOptionality = { fg = colour.mauve },
	typescriptDOMFormProp = { fg = colour.olive },
	Noise = { link = "Boolean" },
	NonText = { fg = "NONE", bg = "NONE" },
	Normal = { fg = colour.pearl },
	NormalFloat = { fg = colour.slate, bg = "NONE" },
	Number = { link = "Boolean" },
	NvimInternalError = { link = "Error" },
	Operator = { fg = colour.steel },
	Pmenu = { fg = colour.pearl },
	PmenuSbar = { link = "Title" },
	PmenuSel = { fg = colour.pearl, bg = colour.raven },
	PmenuThumb = { fg = colour.raven, bg = "NONE" },
	PreCondit = { link = "LineNr" },
	PreProc = { link = "Normal" },
	Repeat = { fg = colour.royal },
	Return = { fg = colour.olive, bold = true },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	SignColumn = { link = "LineNr" },
	Special = { link = "Macro" },
	SpecialChar = { link = "Boolean" },
	SpecialComment = { link = "Comment" },
	SpecialKey = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	SpellCap = { link = "LineNr" },
	SpellLocal = { link = "Tag" },
	SpellRare = { link = "Macro" },
	Statement = { link = "Macro" },
	StatusLine = { link = "NonText" },
	StorageClass = { link = "Boolean" },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	String = { fg = colour.paris, italic = true },
	Structure = { link = "Title" },
	Substitute = { link = "Title" },
	TabLine = { link = "LineNr" },
	TabLineFill = { link = "Normal" },
	TabLineSel = { link = "mailSubject" },
	Tag = { fg = colour.amber },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopeMatching = { fg = colour.royal, bold = true },
	TelescopePreviewMatch = { link = "MatchParen" },
	TelescopePromptPrefix = { link = "Boolean" },
	TelescopePromptTitle = { link = "Macro" },
	TelescopeSelection = { link = "PmenuSel" },
	TelescopeSelectionCaret = { link = "PmenuSel" },
	TelescopeNormal = { fg = colour.slate },
	Title = { fg = colour.pearl },
	Todo = { fg = colour.capri },
	Type = { link = "String" },
	Typedef = { link = "LineNr" },
	Underlined = { fg = colour.blush },
	VertSplit = { link = "NonText" },
	Visual = { fg = colour.capri, bg = colour.steel, bold = true },
	VisualNOS = { link = "Title" },
	WarningMsg = { link = "LineNr" },
	Whitespace = { fg = colour.space },
	WildMenu = { fg = colour.blush, bg = colour.capri },
	constructor = { fg = colour.steel, bold = true },
	cssAtKeyword = { link = "Tag" },
	cssAttrRegion = { link = "Todo" },
	cssBackgroundProp = { link = "Normal" },
	cssBorderProp = { link = "Normal" },
	cssBoxProp = { link = "Normal" },
	cssBraces = { link = "LineNr" },
	cssClassName = { link = "Macro" },
	cssClassNameDot = { link = "Boolean" },
	cssColorProp = { link = "Normal" },
	cssDefinition = { link = "Normal" },
	cssFlexibleBoxProp = { link = "Normal" },
	cssFontAttr = { link = "Todo" },
	cssFontProp = { link = "Normal" },
	cssFunctionName = { link = "Todo" },
	cssGradientAttr = { link = "Todo" },
	cssIEUIProp = { link = "Normal" },
	cssIdentifier = { link = "Todo" },
	cssInteractProp = { link = "Normal" },
	cssListProp = { link = "Normal" },
	cssMediaProp = { link = "Normal" },
	cssNoise = { link = "LineNr" },
	cssPageProp = { link = "Normal" },
	cssPositioningProp = { link = "Normal" },
	cssPseudoClass = { link = "LineNr" },
	cssPseudoClassId = { link = "Todo" },
	cssTagName = { link = "Boolean" },
	cssTextProp = { link = "Normal" },
	cssTransformProp = { link = "Normal" },
	cssTransitionProp = { link = "Normal" },
	cssUIProp = { link = "Normal" },
	cssVendor = { link = "Boolean" },
	diffAdded = { link = "KeywordReturn" },
	diffRemoved = { link = "Boolean" },
	gitcommitBranch = { link = "Boolean" },
	gitcommitComment = { link = "Comment" },
	gitcommitDiscarded = { link = "LineNr" },
	gitcommitDiscardedArrow = { link = "Boolean" },
	gitcommitDiscardedFile = { link = "Boolean" },
	gitcommitDiscardedType = { link = "Boolean" },
	gitcommitNoBranch = { link = "Boolean" },
	gitcommitOverflow = { link = "Boolean" },
	gitcommitSelected = { link = "LineNr" },
	gitcommitSelectedArrow = { link = "KeywordReturn" },
	gitcommitSelectedFile = { link = "KeywordReturn" },
	gitcommitSelectedType = { link = "KeywordReturn" },
	gitcommitSummary = { link = "Title" },
	gitcommitUnmerged = { link = "KeywordReturn" },
	gitcommitUnmergedArrow = { link = "LineNr" },
	gitcommitUnmergedFile = { link = "LineNr" },
	gitcommitUntracked = { link = "LineNr" },
	gitcommitUntrackedFile = { link = "Macro" },
	htmlArg = { link = "Todo" },
	htmlEndTag = { link = "LineNr" },
	htmlHead = { link = "Macro" },
	htmlSpecialTagName = { link = "Macro" },
	htmlTag = { link = "Todo" },
	htmlTagN = { link = "Macro" },
	htmlTagName = { link = "Macro" },
	javaScriptBraces = { link = "LineNr" },
	javaScriptNumber = { link = "Number" },
	javaScriptParens = { link = "LineNr" },
	javaScriptStatement = { link = "KeywordReturn" },
	javaScriptStringT = { link = "Comment" },
	jsArrowFunction = { link = "LineNr" },
	jsAsyncKeyword = { fg = colour.mauve, italic = true },
	jsBrackets = { link = "LineNr" },
	jsDestructuringBraces = { link = "LineNr" },
	jsExport = { link = "Macro" },
	jsForAwait = { link = "Boolean" },
	jsFrom = { link = "Macro" },
	jsFuncArgs = { link = "Todo" },
	jsFuncArgsCommas = { link = "LineNr" },
	jsFuncBlock = { link = "Todo" },
	jsFuncBraces = { link = "LineNr" },
	jsFuncCall = { link = "Title" },
	jsFuncName = { link = "Title" },
	jsFuncParens = { link = "LineNr" },
	jsFunction = { link = "Macro" },
	jsGlobalObjects = { link = "keyword" },
	jsImport = { link = "Macro" },
	jsModuleBraces = { link = "LineNr" },
	jsModuleComma = { link = "LineNr" },
	jsNoise = { link = "Boolean" },
	jsNull = { link = "Boolean" },
	jsObject = { link = "Todo" },
	jsObjectBraces = { link = "LineNr" },
	jsObjectColon = { link = "LineNr" },
	jsObjectKey = { link = "Todo" },
	jsObjectObjectProp = { link = "Boolean" },
	jsObjectSeparator = { link = "LineNr" },
	jsObjectShorthandProp = { link = "LineNr" },
	jsObjectValue = { link = "Title" },
	jsOperator = { link = "LineNr" },
	jsOperatorKeyword = { link = "Return" },
	jsParen = { link = "LineNr" },
	jsParens = { link = "LineNr" },
	jsReturn = { link = "Return" },
	jsStorageClass = { link = "Macro" },
	jsTemplateBraces = { link = "Boolean" },
	jsTemplateString = { link = "Comment" },
	jsTernaryIf = { link = "Boolean" },
	jsTernaryOperator = { link = "Boolean" },
	jsonQuote = { link = "Macro" },
	jsoncBoolean = { link = "Boolean" },
	jsoncBraces = { link = "LineNr" },
	jsonBraces = { link = "LineNr" },
	jsxAttrib = { link = "Todo" },
	jsxBraces = { link = "LineNr" },
	jsxCloseComponentName = { link = "Macro" },
	jsxClosePunct = { link = "LineNr" },
	jsxCloseString = { link = "LineNr" },
	jsxCloseTag = { link = "LineNr" },
	jsxCloseTagName = { link = "Macro" },
	jsxComponentName = { link = "Keyword" },
	jsxDot = { link = "Boolean" },
	jsxEqual = { link = "LineNr" },
	jsxEscJs = { link = "Title" },
	jsxExpressionBlock = { link = "Title" },
	jsxJsBlock = { link = "Boolean" },
	jsxOpenPunct = { link = "LineNr" },
	jsxOpenTag = { link = "LineNr" },
	jsxRegion = { link = "Todo" },
	jsxString = { link = "String" },
	jsxTag = { link = "LineNr" },
	jsxTagName = { link = "Keyword" },
	keyword = { fg = colour.steel, bold = true },
	luaBraces = { link = "LineNr" },
	luaBuiltIn = { link = "Macro" },
	luaComma = { link = "LineNr" },
	luaCondStart = { link = "LineNr" },
	luaConstant = { link = "Boolean" },
	luaDocTag = { link = "Macro" },
	luaErrHand = { link = "Macro" },
	luaFunc = { link = "Macro" },
	luaFuncArgsComma = { link = "LineNr" },
	luaFuncCall = { fg = colour.steel, bold = true },
	luaFuncName = { link = "Title" },
	luaFuncParens = { link = "LineNr" },
	luaFunction = { link = "Macro" },
	luaFunctionBlock = { link = "Macro" },
	luaIn = { link = "Macro" },
	luaKeyword = { link = "Return" },
	luaLocal = { link = "Return" },
	luaNoise = { link = "Boolean" },
	luaOperator = { link = "Boolean" },
	luaParen = { link = "LineNr" },
	luaParens = { link = "LineNr" },
	luaSpecialValue = { link = "Macro" },
	luaStatement = { link = "Return" },
	luaString = { link = "String" },
	luaStringLongTag = { link = "LineNr" },
	luaSymbolOperator = { link = "LineNr" },
	luaTable = { link = "LineNr" },
	luaTableBlock = { link = "LineNr" },
	mailHeader = { link = "Boolean" },
	mailHeaderKey = { link = "Boolean" },
	mailSubject = { fg = colour.slate, bold = true },
	markdownH1 = { link = "Macro" },
	markdownLinkText = { link = "Todo" },
	markdownLinkTextDelimiter = { link = "LineNr" },
	markdownValid = { link = "LineNr" },
	mkdNonListItemBlock = { link = "Boolean" },
	muttrcAliasEncEmail = { link = "LineNr" },
	muttrcAliasKey = { link = "Boolean" },
	muttrcAliasNameNoParens = { link = "Title" },
	muttrcColor = { link = "Return" },
	muttrcColorLine = { link = "Return" },
	muttrcEmail = { link = "Return" },
	muttrcSetStrAssignment = { link = "Boolean" },
	rubyStringDelimiter = { link = "String" },
	rustAssert = { link = "Boolean" },
	rustBoxPlacementBalance = { link = "Boolean" },
	rustCharacter = { link = "Boolean" },
	rustConditional = { link = "Keyword" },
	rustEnumVariant = { link = "Title" },
	rustFoldBraces = { link = "LineNr" },
	rustFuncCall = { link = "Title" },
	rustFuncName = { link = "Title" },
	rustIdentifier = { link = "Title" },
	rustKeyword = { link = "Keyword" },
	rustMacro = { link = "Return" },
	rustModPath = { link = "Return" },
	rustModPathSep = { link = "LineNr" },
	rustOperator = { link = "LineNr" },
	rustRepeat = { link = "Keyword" },
	rustSelf = { link = "Boolean" },
	rustSigil = { link = "Boolean" },
	rustStorage = { link = "Keyword" },
	rustStructure = { link = "Return" },
	rustTrait = { link = "Macro" },
	rustTypedef = { link = "Boolean" },
	shDerefSimple = { link = "Todo" },
	shDo = { link = "Boolean" },
	shDoubleQuote = { link = "String" },
	shEcho = { link = "String" },
	shQuote = { link = "shDoubleQuote" },
	shStatement = { link = "Macro" },
	shTestOpr = { link = "Boolean" },
	shVar = { link = "Boolean" },
	shVarAssign = { link = "LineNr" },
	shWrapLineOperator = { link = "Number" },
	tmuxAssignment = { link = "LineNr" },
	tmuxFlags = { link = "Boolean" },
	tmuxFormatString = { link = "Todo" },
	tmuxOptions = { link = "Title" },
	tmuxString = { link = "Todo" },
	tmuxVariableExpansion = { link = "Return" },
	tmuxVariableExtension = { link = "Todo" },
	tsxAttrib = { link = "Todo" },
	tsxCloseComponentName = { link = "Keyword" },
	tsxCloseString = { link = "LineNr" },
	tsxCloseTag = { link = "LineNr" },
	tsxCloseTagName = { link = "Keyword" },
	tsxEqual = { link = "LineNr" },
	tsxEscJs = { link = "Title" },
	tsxJsBlock = { link = "Title" },
	tsxRegion = { link = "Title" },
	tsxString = { link = "String" },
	tsxTag = { link = "LineNr" },
	tsxTagName = { fg = colour.steel, bold = true },
	tsxIntrinsicTagName = { fg = colour.steel, bold = true },

	----------------
	-- typescript --
	----------------
	typescriptArray = { fg = colour.pearl },
	typescriptArrayMethod = { link = "Macro" },
	typescriptArrowFunc = { link = "LineNr" },
	typescriptArrowFuncArg = { link = "Title" },
	typescriptArrowFuncDef = { link = "LineNr" },
	typescriptAssign = { link = "LineNr" },
	typescriptAsyncFuncKeyword = { fg = colour.mauve, italic = true },
	typescriptBOM = { link = "Title" },
	typescriptBOMHistoryProp = { link = "Boolean" },
	typescriptBOMLocationMethod = { link = "Macro" },
	typescriptBOMWindowMethod = { link = "Return" },
	typescriptBOMWindowProp = { link = "Boolean" },
	typescriptBinaryOp = { link = "Number" },
	typescriptBlock = { link = "Title" },
	typescriptBraces = { link = "LineNr" },
	typescriptCall = { link = "Todo" },
	typescriptConditional = { link = "Keyword" },
	typescriptConditionalParen = { link = "Todo" },
	typescriptDOMDocProp = { link = "Boolean" },
	typescriptDOMWindowProp = { link = "Boolean" },
	typescriptDefault = { link = "Return" },
	typescriptDefaultParam = { link = "LineNr" },
	typescriptDestructureVariable = { link = "Title" },
	typescriptDomDocProp = { link = "Boolean" },
	typescriptDotNotation = { link = "Boolean" },
	typescriptEndColumns = { link = "LineNr" },
	typescriptEnum = { link = "Title" },
	typescriptEnumKeyword = { link = "Macro" },
	typescriptExceptions = { link = "Boolean" },
	typescriptExport = { link = "Keyword" },
	typescriptFileReaderProp = { link = "Boolean" },
	typescriptFuncCallArg = { fg = colour.royal },
	typescriptFuncComma = { link = "LineNr" },
	typescriptFuncImpl = { link = "LineNr" },
	typescriptFuncKeyword = { link = "Keyword" },
	typescriptFuncName = { fg = colour.slate, bold = true },
	typescriptFuncTypeArrow = { link = "LineNr" },
	typescriptGlobal = { link = "Operator" },
	typescriptHeadersMethod = { link = "Macro" },
	typescriptIdentifierName = { link = "Boolean" },
	typescriptImport = { fg = colour.royal },
	typescriptJSONStaticMethod = { link = "Boolean" },
	typescriptMathStaticMethod = { link = "KeywordReturn" },
	typescriptMember = { fg = colour.pearl },
	typescriptNull = { link = "Boolean" },
	typescriptObjectColon = { link = "LineNr" },
	typescriptObjectLabel = { link = "Todo" },
	typescriptObjectLiteral = { link = "Macro" },
	typescriptOperator = { link = "Return" },
	typescriptParenExp = { link = "Title" },
	typescriptParens = { link = "LineNr" },
	typescriptPaymentShippingOptionProp = { link = "Boolean" },
	typescriptProp = { link = "Boolean" },
	typescriptProperty = { link = "Boolean" },
	typescriptResponseProp = { link = "Boolean" },
	typescriptStatementKeyword = { link = "Return" },
	typescriptStringMethod = { link = "Macro" },
	typescriptTemplate = { link = "Tag" },
	typescriptTemplateSB = { link = "Tag" },
	typescriptTemplateSubstitution = { link = "Todo" },
	typescriptTernary = { link = "Todo" },
	typescriptTernaryOp = { link = "Boolean" },
	typescriptTry = { link = "Boolean" },
	typescriptTypeAnnotation = { link = "LineNr" },
	typescriptTypeBrackets = { link = "LineNr" },
	typescriptTypeCase = { link = "Macro" },
	typescriptTypeReference = { link = "Return" },
	typescriptURLUtilsProp = { link = "Boolean" },
	typescriptUnaryOp = { link = "Boolean" },
	typescriptVariable = { fg = colour.royal },
	typescriptVariableDeclaration = { link = "Normal" },
	typescriptXHRMethod = { link = "Macro" },
	variable = { link = "Title" },
	vimEnvvar = { link = "Boolean" },
	vimOper = { link = "Boolean" },
	vimOperParen = { link = "LineNr" },
	vimUserFunc = { link = "Boolean" },
	vimVar = { link = "Todo" },
	xmlEndTag = { link = "Macro" },
	WinBar = { fg = colour.steel, italic = true, bold = true },

	---------
	-- zsh --
	---------
	zshTodo = { link = "Todo" },
	zshDeref = { link = "Todo" },
	zshOption = { link = "Macro" },
	zshSubst = { link = "LineNr" },
	zshKeyword = { link = "Title" },
	zshLineNr = { link = "LineNr" },
	zshNumber = { link = "Number" },
	zshRedirect = { link = "Todo" },
	zshString = { link = "String" },
	zshCommands = { link = "Macro" },
	zshOptStart = { link = "Macro" },
	zshShortDeref = { link = "Tag" },
	zshSubstDelim = { link = "Tag" },
	zshBrackets = { link = "LineNr" },
	zshPrecommand = { link = "Macro" },
	zslhComment = { link = "Comment" },
	zshFunction = { fg = colour.peach },
	zshParentheses = { link = "LineNr" },
	zshStringDelimiter = { link = "String" },

	---------
	-- cmp --
	---------
	CmpItemMenu = { fg = colour.pearl },
	CmpItemKindColor = { fg = colour.paris },
	CmpItemKindFolder = { fg = colour.steel },
	CmpItemKindMethod = { fg = colour.steel },
	CmpItemKindDefault = { fg = colour.steel },
	CmpItemKindKeyword = { fg = colour.royal },
	CmpCompletionBorder = { fg = colour.steel },
	CmpItemKindConstant = { fg = colour.steel },
	CmpItemKindFunction = { fg = colour.royal },
	CmpItemKindOperator = { fg = colour.steel },
	CmpItemKindProperty = { fg = colour.royal },
	CmpItemKindVariable = { fg = colour.olive },
	CmpItemAbbrMatch = { fg = colour.royal, bold = true },
	CmpItemAbbrMatchFuzzy = { fg = colour.royal, bold = true },
	CmpItemKindMatchFuzzy = { fg = colour.royal, bold = true },
	CmpDocumentation = { fg = colour.steel, bg = colour.raven },
	CmpItemAbbrMatchDefault = { fg = colour.royal, bold = true },
	CmpItemAbbrMatchFuzzyDefault = { fg = colour.royal, bold = true },

	------------
	-- notify --
	------------
	NotifyBackground = { bg = colour.space },
	NotifyDEBUGBody = { fg = colour.normal },
	NotifyDEBUGBorder = { fg = colour.purps },
	NotifyDEBUGIcon = { fg = colour.purps },
	NotifyDEBUGTitle = { fg = colour.purps },
	NotifyERRORBody = { fg = colour.normal },
	NotifyERRORBorder = { fg = colour.rouge },
	NotifyERRORIcon = { fg = colour.blush },
	NotifyERRORTitle = { fg = colour.rouge },
	NotifyINFOBody = { fg = colour.normal },
	NotifyINFOBorder = { fg = colour.bazil },
	NotifyINFOIcon = { fg = colour.olive },
	NotifyINFOTitle = { fg = colour.olive },
	NotifyTRACEBody = { fg = colour.normal },
	NotifyTRACEBorder = { fg = colour.mauve },
	NotifyTRACEIcon = { fg = colour.ultra },
	NotifyTRACETitle = { fg = colour.ultra },
	NotifyWARNBody = { fg = colour.normal },
	NotifyWARNBorder = { fg = colour.flush },
	NotifyWARNIcon = { fg = colour.peach },
	NotifyWARNTitle = { fg = colour.peach },

	----------
	-- mini --
	----------
	MiniCursorword = { bg = colour.blush },
	MiniCursorwordCurrent = { bg = colour.mauve },

	-----------------
	-- Diagnostics --
	-----------------
	DiagnosticWarn = { link = "Tag" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { fg = colour.olive },
	DiagnosticError = { link = "Error" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	DiagnositicSignInfo = { fg = colour.olive },
	DiagnosticInformation = { fg = colour.olive },
	DiagnosticUnnecessary = { fg = colour.purps },
	DiagnosticUnderlineHint = { fg = colour.olive, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.olive, undercurl = true },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnderlineError = { fg = colour.rouge, undercurl = true },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.steel },
	DiagnosticVirtualTextWarn = { fg = colour.amber, bg = colour.flush },
	DiagnosticVirtualTextError = { fg = colour.rouge, bg = colour.blood },
	---------
	-- Lsp --
	---------
	LspFloatWinNormal = { bg = colour.raven },
	LspFloatWinBorder = { fg = colour.purps },
	LspSagaBorderTitle = { fg = colour.capri },
	LspSagaHoverBorder = { fg = colour.purps },
	LspSagaRenameBorder = { fg = colour.purps },
	LspSagaDefPreviewBorder = { fg = colour.purps },
	LspSagaCodeActionBorder = { fg = colour.purps },
	LspSagaFinderSelection = { fg = colour.steel },
	LspSagaCodeActionTitle = { fg = colour.steel },
	LspSagaCodeActionContent = { fg = colour.steel },
	LspSagaSignatureHelpBorder = { fg = colour.purps },
	ReferencesCount = { fg = colour.steel },
	DefinitionCount = { fg = colour.steel },
	DefinitionIcon = { fg = colour.royal },
	ReferencesIcon = { fg = colour.steel },
	TargetWord = { fg = colour.capri },
}
