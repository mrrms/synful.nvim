-- As of neovim 0.10 new highlight definitions are designed to be more compatible with upstream treesitter definitions. See: https://neovim.io/doc/user/treesitter.html#treesitter-highlight-groups
local colour = require("synful.colour")

return {
	["@variable"] = { link = "Normal" },
	["@keyword.lua"] = { link = "Cursor" },
	["@keyword.conditional.lua"] = { link = "Cursor" },
	["@keyword.return.lua"] = { link = "Return" },
	["@keyword.operator.lua"] = { link = "Boolean" },
	["@constant.builtin.lua"] = { link = "Boolean" },
	["@punctuation.bracket.lua"] = { link = "LineNr" },
	["@operator.lua"] = { link = "Operator" },
	["@constructor.lua"] = { link = "LineNr" },
	["@string.special.path"] = { fg = colour.bazil },
	["@string.special.url"] = { fg = colour.royal, italic = true },
	["@keyword.conditional.ternary"] = { fg = colour.coral },
	["@punctuation.delimiter"] = { link = "Delimiter" },
	["@punctuation.bracket"] = { link = "LineNr" },
	["@punctuation.special"] = { link = "LineNr" },
	["@comment.documentation"] = { fg = colour.slate },
	["@comment.error"] = { link = "Error" },
	["@comment.warning"] = { link = "Tag" },
	["@comment.todo"] = { fg = colour.capri },
	["@comment.note"] = { link = "Return" },
	["@tag"] = { fg = colour.steel, bold = true },
	["@tag.builtin"] = { link = "@tag" },
	["@tag.attribute"] = { fg = colour.capri },
	["@tag.delimiter"] = { link = "LineNr" },
	["@spell"] = { fg = colour.coral, undercurl = true },
	Boolean = { fg = colour.mauve },
	Character = { fg = colour.mauve, italic = true },
	CmpItemAbbrMatch = { fg = colour.coral },
	CmpItemAbbrMatchFuzzy = { fg = colour.coral },
	CmpItemAbbrMatchDefault = { fg = colour.coral },
	CmpItemAbbrMatchFuzzyDefault = { fg = colour.coral },
	CmpItemKindColor = { link = "LineNr" },
	CmpItemKindConstant = { link = "LineNr" },
	CmpItemKindDefault = { link = "LineNr" },
	CmpItemKindFolder = { link = "LineNr" },
	CmpItemKindFunction = { link = "LineNr" },
	CmpItemKindKeyword = { link = "LineNr" },
	CmpItemKindMatchFuzzy = { fg = colour.coral },
	CmpItemKindMethod = { link = "LineNr" },
	CmpItemKindOperator = { link = "LineNr" },
	CmpItemKindProperty = { link = "LineNr" },
	CmpItemKindVariable = { link = "LineNr" },
	CmpItemMenu = { fg = colour.slate },
	CodeiumSuggestion = { link = "LineNr" },
	ColorColumn = { link = "NonText" },
	Command = { fg = colour.slate, bold = true },
	Comment = { link = "LineNr" },
	Conceal = { fg = colour.purps },
	Conditional = { link = "Character" },
	Constant = { link = "Macro" },
	Cursor = { link = "Cursor" },
	CursorLine = { bg = colour.depth },
	CursorLineNr = { fg = colour.coral, bg = colour.depth },
	Debug = { link = "Boolean" },
	Define = { link = "Macro" },
	DefinitionCount = { link = "Delimiter" },
	DefinitionIcon = { link = "Macro" },
	Delimiter = { fg = colour.steel },
	DiagnositicSignInfo = { link = "Cursor" },
	DiagnosticError = { link = "Error" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { link = "Cursor" },
	DiagnosticInformation = { link = "Cursor" },
	DiagnosticUnderlineError = { fg = colour.rouge, undercurl = true },
	DiagnosticUnderlineHint = { fg = colour.olive, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.olive, undercurl = true },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnnecessary = { link = "Conceal" },
	DiagnosticVirtualTextError = { fg = colour.rouge, bg = colour.blood },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.steel },
	DiagnosticVirtualTextWarn = { fg = colour.amber, bg = colour.flush },
	DiagnosticWarn = { link = "Tag" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	DiffAdd = { link = "String" },
	DiffChange = { link = "LineNr" },
	DiffDelete = { link = "Boolean" },
	DiffText = { link = "Macro" },
	Directory = { fg = colour.steel, bold = true },
	EndOfBuffer = { link = "StatusLineNC" },
	Error = { fg = colour.rouge },
	ErrorMsg = { fg = colour.rouge },
	Exception = { link = "Macro" },
	Field = { link = "Title" },
	FlashBackdrop = { link = "Delimiter" },
	FlashLabel = { fg = colour.ultra, bg = colour.steel, bold = true },
	Float = { link = "Boolean" },
	FloatBorder = { fg = colour.depth },
	FloatShadow = { link = "NonText" },
	FloatShadowThrough = { link = "NonText" },
	FoldColumn = { link = "FloatBorder" },
	Folded = { link = "Conceal" },
	Function = { fg = colour.royal, bold = true },
	GitGutterAdd = { link = "KeywordReturn" },
	GitGutterChange = { link = "LineNr" },
	GitGutterChangeDelete = { link = "Tag" },
	GitGutterDelete = { link = "Boolean" },
	Identifier = { link = "Normal" },
	Ignore = { link = "LineNr" },
	IncSearch = { link = "Visual" },
	Include = { link = "Macro" },
	Italic = { italic = true },
	Keyword = { link = "Macro" },
	KeywordFunction = { link = "Macro" },
	KeywordReturn = { link = "Cursor" },
	Label = { link = "Macro" },
	LazyButton = { fg = colour.slate, bg = colour.raven },
	LazyCommit = { link = "Boolean" },
	LazyDimmed = { link = "Tag" },
	LazyNormal = { link = "Pmenu" },
	LazyProp = { link = "Boolean" },
	LineNr = { fg = colour.ashen },
	LspFloatWinBorder = { link = "Conceal" },
	LspFloatWinNormal = { bg = colour.raven },
	LspSagaBorderTitle = { fg = colour.capri },
	LspSagaCodeActionBorder = { link = "Conceal" },
	LspSagaCodeActionContent = { link = "Delimiter" },
	LspSagaCodeActionTitle = { link = "Delimiter" },
	LspSagaDefPreviewBorder = { link = "Conceal" },
	LspSagaFinderSelection = { link = "Delimiter" },
	LspSagaHoverBorder = { link = "Conceal" },
	LspSagaRenameBorder = { link = "Conceal" },
	LspSagaSignatureHelpBorder = { link = "Conceal" },
	Macro = { fg = colour.royal },
	MatchParen = { fg = colour.rouge, bold = true },
	MiniCursorword = { bg = colour.rouge },
	MiniCursorwordCurrent = { bg = colour.mauve },
	NoiceCmdlinePopupBorder = { link = "FloatBorder" },
	Noise = { link = "Boolean" },
	NonText = { fg = "NONE", bg = "NONE" },
	Normal = { link = "Normal" },
	NormalFloat = { link = "Pmenu" },
	NotifyBackground = { bg = "NONE" },
	NotifyDEBUGBody = { fg = colour.normal },
	NotifyDEBUGBorder = { link = "Conceal" },
	NotifyDEBUGIcon = { link = "Conceal" },
	NotifyDEBUGTitle = { link = "Conceal" },
	NotifyERRORBody = { fg = colour.normal },
	NotifyERRORBorder = { fg = colour.rouge },
	NotifyERRORIcon = { fg = colour.rouge },
	NotifyERRORTitle = { fg = colour.rouge },
	NotifyINFOBody = { fg = colour.normal },
	NotifyINFOBorder = { fg = colour.bazil },
	NotifyINFOIcon = { link = "Cursor" },
	NotifyINFOTitle = { link = "Cursor" },
	NotifyTRACEBody = { fg = colour.normal },
	NotifyTRACEBorder = { link = "Boolean" },
	NotifyTRACEIcon = { fg = colour.ultra },
	NotifyTRACETitle = { fg = colour.ultra },
	NotifyWARNBody = { fg = colour.normal },
	NotifyWARNBorder = { fg = colour.flush },
	NotifyWARNIcon = { fg = colour.peach },
	NotifyWARNTitle = { fg = colour.peach },
	Number = { link = "Boolean" },
	NvimInternalError = { link = "Error" },
	Operator = { link = "LineNr" },
	Pmenu = { fg = colour.ashen, bg = colour.depth },
	PmenuSbar = { link = "Title" },
	PmenuSel = { fg = colour.raven, bg = colour.coral },
	PmenuThumb = { fg = colour.depth, bg = colour.raven },
	PreCondit = { link = "LineNr" },
	PreProc = { link = "Normal" },
	ReferencesCount = { link = "Delimiter" },
	ReferencesIcon = { link = "Delimiter" },
	Repeat = { link = "Macro" },
	Return = { fg = colour.olive, bold = true },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	SignColumn = { link = "LineNr" },
	Special = { link = "Macro" },
	SpecialChar = { link = "Boolean" },
	SpecialComment = { link = "Comment" },
	SpecialKey = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	SpellCap = { link = "LineNr" },
	SpellLocal = { link = "Tag" },
	SpellRare = { link = "Macro" },
	Statement = { link = "Macro" },
	StatusLine = { link = "NonText" },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	StorageClass = { link = "Boolean" },
	String = { fg = colour.paris },
	Structure = { link = "Title" },
	Substitute = { link = "Title" },
	TabLine = { link = "LineNr" },
	TabLineFill = { link = "Normal" },
	TabLineSel = { link = "mailSubject" },
	Tag = { fg = colour.coral },
	TargetWord = { fg = colour.capri },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopeMatching = { fg = colour.coral },
	TelescopeNormal = { link = "Normal" },
	TelescopePreviewMatch = { link = "MatchParen" },
	TelescopePromptPrefix = { link = "Boolean" },
	TelescopePromptTitle = { link = "Macro" },
	TelescopeSelection = { link = "PmenuSel" },
	TelescopeSelectionCaret = { link = "PmenuSel" },
	Title = { link = "Normal" },
	Type = { link = "String" },
	Typedef = { link = "LineNr" },
	Underlined = { fg = colour.rouge },
	VertSplit = { link = "NonText" },
	Visual = { fg = colour.capri, bg = colour.steel, bold = true },
	VisualNOS = { link = "Title" },
	WarningMsg = { link = "LineNr" },
	Whitespace = { fg = colour.space },
	WildMenu = { fg = colour.rouge, bg = colour.capri },
	WinBar = { fg = colour.steel, italic = true, bold = true },
	constructor = { fg = colour.steel, bold = true },
	cssAtKeyword = { link = "Tag" },
	cssAttrRegion = { link = "@comment.todo" },
	cssBackgroundProp = { link = "Normal" },
	cssBorderProp = { link = "Normal" },
	cssBoxProp = { link = "Normal" },
	cssBraces = { link = "LineNr" },
	cssClassName = { link = "Macro" },
	cssClassNameDot = { link = "Boolean" },
	cssColorProp = { link = "Normal" },
	cssDefinition = { link = "Normal" },
	cssFlexibleBoxProp = { link = "Normal" },
	cssFontAttr = { link = "@comment.todo" },
	cssFontProp = { link = "Normal" },
	cssFunctionName = { link = "@comment.todo" },
	cssGradientAttr = { link = "@comment.todo" },
	cssIEUIProp = { link = "Normal" },
	cssIdentifier = { link = "@comment.todo" },
	cssInteractProp = { link = "Normal" },
	cssListProp = { link = "Normal" },
	cssMediaProp = { link = "Normal" },
	cssNoise = { link = "LineNr" },
	cssPageProp = { link = "Normal" },
	cssPositioningProp = { link = "Normal" },
	cssPseudoClass = { link = "LineNr" },
	cssPseudoClassId = { link = "@comment.todo" },
	cssTagName = { link = "Boolean" },
	cssTextProp = { link = "Normal" },
	cssTransformProp = { link = "Normal" },
	cssTransitionProp = { link = "Normal" },
	cssUIProp = { link = "Normal" },
	cssVendor = { link = "Boolean" },
	diffAdded = { link = "KeywordReturn" },
	diffRemoved = { link = "Boolean" },
	gitcommitBranch = { link = "Boolean" },
	gitcommitComment = { link = "Comment" },
	gitcommitDiscarded = { link = "LineNr" },
	gitcommitDiscardedArrow = { link = "Boolean" },
	gitcommitDiscardedFile = { link = "Boolean" },
	gitcommitDiscardedType = { link = "Boolean" },
	gitcommitNoBranch = { link = "Boolean" },
	gitcommitOverflow = { link = "Boolean" },
	gitcommitSelected = { link = "LineNr" },
	gitcommitSelectedArrow = { link = "KeywordReturn" },
	gitcommitSelectedFile = { link = "KeywordReturn" },
	gitcommitSelectedType = { link = "KeywordReturn" },
	gitcommitSummary = { link = "Title" },
	gitcommitUnmerged = { link = "KeywordReturn" },
	gitcommitUnmergedArrow = { link = "LineNr" },
	gitcommitUnmergedFile = { link = "LineNr" },
	gitcommitUntracked = { link = "LineNr" },
	gitcommitUntrackedFile = { link = "Macro" },
	htmlArg = { link = "@comment.todo" },
	htmlEndTag = { link = "LineNr" },
	htmlHead = { link = "Macro" },
	htmlSpecialTagName = { link = "Macro" },
	htmlTag = { link = "@comment.todo" },
	htmlTagN = { link = "Macro" },
	htmlTagName = { link = "Macro" },
	jsonBraces = { link = "LineNr" },
	jsonQuote = { link = "Macro" },
	jsoncBoolean = { link = "Boolean" },
	jsoncBraces = { link = "LineNr" },
	keyword = { fg = colour.steel, bold = true },
	mailHeader = { link = "Boolean" },
	mailHeaderKey = { link = "Boolean" },
	mailSubject = { fg = colour.slate, bold = true },
	muttrcAliasEncEmail = { link = "LineNr" },
	muttrcAliasKey = { link = "Boolean" },
	muttrcAliasNameNoParens = { link = "Title" },
	muttrcColor = { link = "Return" },
	muttrcColorLine = { link = "Return" },
	muttrcEmail = { link = "Return" },
	muttrcSetStrAssignment = { link = "Boolean" },
	shDerefSimple = { link = "@comment.todo" },
	shDo = { link = "Boolean" },
	shDoubleQuote = { link = "String" },
	shEcho = { link = "String" },
	shQuote = { link = "shDoubleQuote" },
	shStatement = { link = "Macro" },
	shTestOpr = { link = "Boolean" },
	shVar = { link = "Boolean" },
	shVarAssign = { link = "LineNr" },
	shWrapLineOperator = { link = "Number" },
	tmuxAssignment = { link = "LineNr" },
	tmuxFlags = { link = "Boolean" },
	tmuxFormatString = { link = "@comment.todo" },
	tmuxOptions = { link = "Title" },
	tmuxString = { link = "@comment.todo" },
	tmuxVariableExpansion = { link = "Return" },
	tmuxVariableExtension = { link = "@comment.todo" },
	tsxCloseComponentName = { link = "Keyword" },
	tsxCloseString = { link = "LineNr" },
	tsxCloseTag = { link = "LineNr" },
	tsxCloseTagName = { link = "Keyword" },
	tsxEqual = { link = "LineNr" },
	tsxEscJs = { link = "Title" },
	tsxIntrinsicTagName = { fg = colour.steel, bold = true },
	tsxJsBlock = { link = "Title" },
	tsxRegion = { link = "Title" },
	tsxString = { link = "String" },
	tsxTag = { link = "LineNr" },
	tsxTagName = { fg = colour.steel, bold = true },
	typescriptAliasKeyword = { link = "Cursor" },
	typescriptArray = { link = "Normal" },
	typescriptArrayMethod = { link = "Macro" },
	typescriptArrowFunc = { link = "LineNr" },
	typescriptArrowFuncArg = { link = "Title" },
	typescriptArrowFuncDef = { link = "LineNr" },
	typescriptAssign = { link = "LineNr" },
	typescriptAsyncFuncKeyword = { link = "Character" },
	typescriptBOM = { link = "Title" },
	typescriptBOMHistoryProp = { link = "Boolean" },
	typescriptBOMLocationMethod = { link = "Macro" },
	typescriptBOMWindowMethod = { link = "Return" },
	typescriptBOMWindowProp = { link = "Boolean" },
	typescriptBinaryOp = { link = "Number" },
	typescriptBlock = { link = "Title" },
	typescriptBraces = { link = "LineNr" },
	typescriptCall = { link = "@comment.todo" },
	typescriptConditional = { link = "Keyword" },
	typescriptConditionalParen = { link = "@comment.todo" },
	typescriptDOMDocProp = { link = "Boolean" },
	typescriptDOMFormProp = { link = "Cursor" },
	typescriptDOMWindowProp = { link = "Boolean" },
	typescriptDefault = { link = "Return" },
	typescriptDefaultParam = { link = "LineNr" },
	typescriptDestructureVariable = { link = "Title" },
	typescriptDomDocProp = { link = "Boolean" },
	typescriptDotNotation = { link = "Boolean" },
	typescriptEndColumns = { link = "LineNr" },
	typescriptEnum = { link = "Title" },
	typescriptEnumKeyword = { link = "Macro" },
	typescriptExceptions = { link = "Boolean" },
	typescriptExport = { link = "Keyword" },
	typescriptFileReaderProp = { link = "Boolean" },
	typescriptFuncCallArg = { link = "Macro" },
	typescriptFuncComma = { link = "LineNr" },
	typescriptFuncImpl = { link = "LineNr" },
	typescriptFuncKeyword = { link = "Keyword" },
	typescriptFuncName = { fg = colour.slate, bold = true },
	typescriptFuncTypeArrow = { link = "LineNr" },
	typescriptGlobal = { link = "Operator" },
	typescriptHeadersMethod = { link = "Macro" },
	typescriptIdentifierName = { link = "Boolean" },
	typescriptImport = { link = "Macro" },
	typescriptJSONStaticMethod = { link = "Boolean" },
	typescriptMathStaticMethod = { link = "KeywordReturn" },
	typescriptMember = { link = "Normal" },
	typescriptMemberOptionality = { link = "Boolean" },
	typescriptNull = { link = "Boolean" },
	typescriptObjectColon = { link = "LineNr" },
	typescriptObjectLabel = { link = "@comment.todo" },
	typescriptObjectLiteral = { link = "Macro" },
	typescriptOperator = { link = "Return" },
	typescriptParenExp = { link = "Title" },
	typescriptParens = { link = "LineNr" },
	typescriptPaymentShippingOptionProp = { link = "Boolean" },
	typescriptProp = { link = "Boolean" },
	typescriptProperty = { link = "Boolean" },
	typescriptResponseProp = { link = "Boolean" },
	typescriptStatementKeyword = { link = "Return" },
	typescriptStringMethod = { link = "Macro" },
	typescriptTemplate = { link = "Tag" },
	typescriptTemplateSB = { link = "Tag" },
	typescriptTemplateSubstitution = { link = "@comment.todo" },
	typescriptTry = { link = "Boolean" },
	typescriptTypeAnnotation = { link = "LineNr" },
	typescriptTypeBrackets = { link = "LineNr" },
	typescriptTypeCase = { link = "Macro" },
	typescriptTypeReference = { link = "Return" },
	typescriptURLUtilsProp = { link = "Boolean" },
	typescriptUnaryOp = { link = "Boolean" },
	typescriptVariable = { link = "Macro" },
	typescriptVariableDeclaration = { link = "Normal" },
	typescriptXHRMethod = { link = "Macro" },
	variable = { link = "Title" },
	vimEnvvar = { link = "Boolean" },
	vimOper = { link = "Boolean" },
	vimOperParen = { link = "LineNr" },
	vimUserFunc = { link = "Boolean" },
	vimVar = { link = "@comment.todo" },
	xmlEndTag = { link = "Macro" },
	zshBrackets = { link = "LineNr" },
	zshCommands = { link = "Macro" },
	zshDeref = { link = "@comment.todo" },
	zshFunction = { fg = colour.peach },
	zshKeyword = { link = "Title" },
	zshLineNr = { link = "LineNr" },
	zshNumber = { link = "Number" },
	zshOptStart = { link = "Macro" },
	zshOption = { link = "Macro" },
	zshParentheses = { link = "LineNr" },
	zshPrecommand = { link = "Macro" },
	zshRedirect = { link = "@comment.todo" },
	zshShortDeref = { link = "Tag" },
	zshString = { link = "String" },
	zshStringDelimiter = { link = "String" },
	zshSubst = { link = "LineNr" },
	zshSubstDelim = { link = "Tag" },
	zshTodo = { link = "@comment.todo" },
	zslhComment = { link = "Comment" },
}
