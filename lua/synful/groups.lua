local colour = require('synful.colour')

--> resolves semantic highlighting for lsp servers
local links = {
  ['@lsp.type.namespace'] = '@namespace',
  ['@lsp.type.type'] = '@type',
  ['@lsp.type.class'] = '@type',
  ['@lsp.type.enum'] = '@type',
  ['@lsp.type.interface'] = '@type',
  ['@lsp.type.struct'] = '@structure',
  ['@lsp.type.parameter'] = '@parameter',
  ['@lsp.type.variable'] = '@variable',
  ['@lsp.type.property'] = '@property',
  ['@lsp.type.enumMember'] = '@constant',
  ['@lsp.type.function'] = '@function',
  ['@lsp.type.method'] = '@method',
  ['@lsp.type.macro'] = '@macro',
  ['@lsp.type.decorator'] = '@function',
  ['@text.literal.vimdoc'] = '@function'
}

for newgroup, oldgroup in pairs(links) do
  vim.api.nvim_set_hl(0, newgroup, { link = oldgroup, default = true })
end

return {
  Bold = { bold = true },
  CursorLine = { bg = 'NONE' },
  Italic = { italic = true },
  Underlined = { fg = colour.rouge },
  Boolean = { fg = colour.mauve },
  Conceal = { fg = colour.paris },
  FloatBorder = { fg = colour.raven },
  KeywordReturn = { fg = colour.olive },
  LineNr = { fg = colour.stone },
  Macro = { fg = colour.royal },
  Normal = { fg = colour.pearl },
  Tag = { fg = colour.amber },
  Todo = { fg = colour.capri },
  Title = { fg = colour.pearl },
  NonText = { fg = 'NONE', bg = 'NONE' },
  DiagnosticUnnecessary = { fg = colour.ultra, bold = true },
  Function = { fg = colour.pearl, bold = true },
  NormalFloat = { fg = colour.slate, bg = 'NONE' },
  PmenuThumb = { fg = colour.mauve, bg = 'NONE' },
  Return = { fg = colour.bazil, bold = true },
  StatusLineNC = { fg = colour.space, bg = 'NONE' },
  keyword = { fg = colour.steel, bold = true },
  mailSubject = { fg = colour.slate, bold = true },
  Comment = { fg = colour.metal, italic = true },
  Folded = { fg = colour.stone, italic = true },
  String = { fg = colour.paris, italic = true },
  DiagnosticUnderlineError = { fg = colour.rouge, undercurl = true },
  DiagnosticUnderlineHint = { fg = colour.bazil, undercurl = true },
  DiagnosticUnderlineInfo = { fg = colour.pearl, undercurl = true },
  DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
  DiagnosticVirtualTextError = { fg = colour.rouge, bg = colour.blush },
  DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.green },
  DiagnosticVirtualTextInfo = { fg = colour.pearl, bg = colour.stone },
  DiagnosticVirtualTextWarn = { fg = colour.amber, bg = colour.orang },
  WildMenu = { fg = colour.rouge, bg = colour.capri },
  CursorLineNr = { fg = colour.bazil, bg = 'NONE', bold = true },
  MatchParen = { fg = colour.rouge, bold = true, underline = true },
  PmenuSel = { fg = colour.slate, bg = colour.raven, bold = true },
  Visual = { fg = colour.capri, bg = colour.steel, bold = true },
  Search = { fg = colour.capri, bg = colour.steel, bold = true, underline = true },
  Character = { link = 'Boolean' },
  CmpCompletionBorder = { link = 'FloatBorder' },
  CmpItemAbbrMatch = { link = 'Boolean' },
  CmpItemAbbrMatchDefault = { link = 'Todo' },
  CmpItemAbbrMatchFuzzy = { link = 'Todo' },
  CmpItemAbbrMatchFuzzyDefault = { link = 'Todo' },
  CmpItemKindColor = { link = 'Title' },
  CmpItemKindConstant = { link = 'Macro' },
  CmpItemKindDefault = { link = 'Macro' },
  CmpItemKindFolder = { link = 'Return' },
  CmpItemKindFunction = { link = 'Boolean' },
  CmpItemKindKeyword = { link = 'LineNr' },
  CmpItemKindMatchFuzzy = { link = 'Todo' },
  CmpItemKindMethod = { link = 'Boolean' },
  CmpItemKindOperator = { link = 'Title' },
  CmpItemKindProperty = { link = 'Boolean' },
  CmpItemKindVariable = { link = 'String' },
  CmpItemMenu = { link = 'Todo' },
  CodeiumSuggestion = { link = 'Normal' },
  ColorColumn = { link = 'NonText' },
  Command = { link = 'Macro' },
  Conditional = { link = 'Macro' },
  Constant = { link = 'Macro' },
  Cursor = { link = 'Title' },
  Debug = { link = 'Boolean' },
  Define = { link = 'Macro' },
  Delimiter = { link = 'LineNr' },
  DiagnosticError = { link = 'Boolean' },
  DiagnosticHint = { link = 'Boolean' },
  DiagnosticInfo = { link = 'Todo' },
  DiagnosticWarn = { link = 'Tag' },
  DiffAdd = { link = 'String' },
  DiffChange = { link = 'LineNr' },
  DiffDelete = { link = 'Boolean' },
  DiffText = { link = 'Macro' },
  Directory = { link = 'keyword' },
  EndOfBuffer = { link = 'StatusLineNC' },
  Error = { link = 'Boolean' },
  ErrorMsg = { link = 'Boolean' },
  Exception = { link = 'Macro' },
  Field = { link = 'Title' },
  Float = { link = 'Boolean' },
  FloatShadow = { link = 'NonText' },
  FloatShadowThrough = { link = 'NonText' },
  FoldColumn = { link = 'Boolean' },
  GitGutterAdd = { link = 'KeywordReturn' },
  GitGutterChange = { link = 'LineNr' },
  GitGutterChangeDelete = { link = 'Tag' },
  GitGutterDelete = { link = 'Boolean' },
  Identifier = { link = 'Title' },
  Ignore = { link = 'LineNr' },
  IncSearch = { link = 'Visual' },
  Include = { link = 'Macro' },
  KeywordFunction = { link = 'Macro' },
  Label = { link = 'Macro' },
  LazyCommit = { link = 'Boolean' },
  LazyDimmed = { link = 'Tag' },
  LazyNormal = { link = 'pmenu' },
  LazyProp = { link = 'Boolean' },
  Noise = { link = 'Boolean' },
  NotifyDEBUGBody = { link = 'Normal' },
  NotifyDEBUGBorder = { link = 'FloatBorder' },
  NotifyDEBUGIcon = { link = 'LineNr' },
  NotifyDEBUGTitle = { link = 'LineNr' },
  NotifyERRORBody = { link = 'Normal' },
  NotifyERRORBorder = { link = 'FloatBorder' },
  NotifyERRORIcon = { link = 'Boolean' },
  NotifyERRORTitle = { link = 'Boolean' },
  NotifyINFOBody = { link = 'Normal' },
  NotifyINFOBorder = { link = 'FloatBorder' },
  NotifyINFOIcon = { link = 'String' },
  NotifyINFOTitle = { link = 'String' },
  NotifyTRACEBody = { link = 'Normal' },
  NotifyTRACEBorder = { link = 'FloatBorder' },
  NotifyTRACEIcon = { link = 'gitcommitNoBranch' },
  NotifyTRACETitle = { link = 'gitcommitNoBranch' },
  NotifyWARNBody = { link = 'Normal' },
  NotifyWARNBorder = { link = 'FloatBorder' },
  NotifyWARNIcon = { link = 'Tag' },
  NotifyWARNTitle = { link = 'Tag' },
  Number = { link = 'Boolean' },
  NvimInternalError = { link = 'Boolean' },
  Operator = { link = 'Tag' },
  Pmenu = { link = 'NormalFloat' },
  PmenuSbar = { link = 'Title' },
  PreCondit = { link = 'LineNr' },
  PreProc = { link = 'Normal' },
  Repeat = { link = 'Return' },
  SignColumn = { link = 'LineNr' },
  Special = { link = 'Macro' },
  SpecialChar = { link = 'Boolean' },
  SpecialComment = { link = 'Comment' },
  SpecialKey = { link = 'Macro' },
  SpellBad = { link = 'Boolean' },
  SpellCap = { link = 'LineNr' },
  SpellLocal = { link = 'Tag' },
  SpellRare = { link = 'Macro' },
  Statement = { link = 'Macro' },
  StatusLine = { link = 'NonText' },
  StorageClass = { link = 'Boolean' },
  Structure = { link = 'Title' },
  Substitute = { link = 'Title' },
  TabLine = { link = 'LineNr' },
  TabLineFill = { link = 'Normal' },
  TabLineSel = { link = 'mailSubject' },
  TelescopeBorder = { link = 'FloatBorder' },
  TelescopeMatching = { link = 'Todo' },
  TelescopePreviewMatch = { link = 'MatchParen' },
  TelescopePromptPrefix = { link = 'Boolean' },
  TelescopePromptTitle = { link = 'Macro' },
  TelescopeSelection = { link = 'PmenuSel' },
  TelescopeSelectionCaret = { link = 'PmenuSel' },
  Type = { link = 'String' },
  Typedef = { link = 'LineNr' },
  VertSplit = { link = 'NonText' },
  VisualNOS = { link = 'Title' },
  WarningMsg = { link = 'LineNr' },
  Whitespace = { link = 'Todo' },
  constructor = { link = 'Normal' },
  cssAttrRegion = { link = 'Todo' },
  cssBackgroundProp = { link = 'Normal' },
  cssBorderProp = { link = 'Normal' },
  cssBoxProp = { link = 'Normal' },
  cssBraces = { link = 'LineNr' },
  cssClassName = { link = 'Macro' },
  cssClassNameDot = { link = 'Boolean' },
  cssColorProp = { link = 'Normal' },
  cssDefinition = { link = 'Normal' },
  cssFlexibleBoxProp = { link = 'Normal' },
  cssFontAttr = { link = 'Todo' },
  cssFontProp = { link = 'Normal' },
  cssFunctionName = { link = 'Todo' },
  cssGradientAttr = { link = 'Todo' },
  cssIEUIProp = { link = 'Normal' },
  cssInteractProp = { link = 'Normal' },
  cssListProp = { link = 'Normal' },
  cssMediaProp = { link = 'Normal' },
  cssNoise = { link = 'LineNr' },
  cssPageProp = { link = 'Normal' },
  cssPositioningProp = { link = 'Normal' },
  cssPseudoClass = { link = 'LineNr' },
  cssPseudoClassId = { link = 'Todo' },
  cssTagName = { link = 'Boolean' },
  cssTextProp = { link = 'Normal' },
  cssTransformProp = { link = 'Normal' },
  cssTransitionProp = { link = 'Normal' },
  cssUIProp = { link = 'Normal' },
  cssVendor = { link = 'Boolean' },
  diffAdded = { link = 'KeywordReturn' },
  diffRemoved = { link = 'Boolean' },
  gitcommitBranch = { link = 'Boolean' },
  gitcommitComment = { link = 'Comment' },
  gitcommitDiscarded = { link = 'LineNr' },
  gitcommitDiscardedArrow = { link = 'Boolean' },
  gitcommitDiscardedFile = { link = 'Boolean' },
  gitcommitDiscardedType = { link = 'Boolean' },
  gitcommitNoBranch = { link = 'Boolean' },
  gitcommitOverflow = { link = 'Boolean' },
  gitcommitSelected = { link = 'LineNr' },
  gitcommitSelectedArrow = { link = 'KeywordReturn' },
  gitcommitSelectedFile = { link = 'KeywordReturn' },
  gitcommitSelectedType = { link = 'KeywordReturn' },
  gitcommitSummary = { link = 'Title' },
  gitcommitUnmerged = { link = 'KeywordReturn' },
  gitcommitUnmergedArrow = { link = 'LineNr' },
  gitcommitUnmergedFile = { link = 'LineNr' },
  gitcommitUntracked = { link = 'LineNr' },
  gitcommitUntrackedFile = { link = 'Macro' },
  htmlArg = { link = 'Todo' },
  htmlEndTag = { link = 'LineNr' },
  htmlHead = { link = 'Macro' },
  htmlSpecialTagName = { link = 'Macro' },
  htmlTag = { link = 'Todo' },
  htmlTagN = { link = 'Macro' },
  htmlTagName = { link = 'Macro' },
  javaScriptBraces = { link = 'LineNr' },
  javaScriptNumber = { link = 'Number' },
  javaScriptParens = { link = 'LineNr' },
  javaScriptStatement = { link = 'KeywordReturn' },
  javaScriptStringT = { link = 'Comment' },
  jsArrowFunction = { link = 'LineNr' },
  jsAsyncKeyword = { link = 'Boolean' },
  jsBrackets = { link = 'LineNr' },
  jsDestructuringBraces = { link = 'LineNr' },
  jsExport = { link = 'Macro' },
  jsForAwait = { link = 'Boolean' },
  jsFrom = { link = 'Macro' },
  jsFuncArgs = { link = 'Todo' },
  jsFuncArgsCommas = { link = 'LineNr' },
  jsFuncBlock = { link = 'Todo' },
  jsFuncBraces = { link = 'LineNr' },
  jsFuncCall = { link = 'Title' },
  jsFuncName = { link = 'Title' },
  jsFuncParens = { link = 'LineNr' },
  jsFunction = { link = 'Macro' },
  jsGlobalObjects = { link = 'keyword' },
  jsImport = { link = 'Macro' },
  jsModuleBraces = { link = 'LineNr' },
  jsModuleComma = { link = 'LineNr' },
  jsNoise = { link = 'Boolean' },
  jsNull = { link = 'Boolean' },
  jsObject = { link = 'Todo' },
  jsObjectBraces = { link = 'LineNr' },
  jsObjectColon = { link = 'LineNr' },
  jsObjectKey = { link = 'Todo' },
  jsObjectObjectProp = { link = 'Boolean' },
  jsObjectSeparator = { link = 'LineNr' },
  jsObjectShorthandProp = { link = 'LineNr' },
  jsObjectValue = { link = 'Title' },
  jsOperator = { link = 'LineNr' },
  jsOperatorKeyword = { link = 'Return' },
  jsParen = { link = 'LineNr' },
  jsParens = { link = 'LineNr' },
  jsReturn = { link = 'Return' },
  jsStorageClass = { link = 'Macro' },
  jsTemplateBraces = { link = 'Boolean' },
  jsTemplateString = { link = 'Comment' },
  jsTernaryIf = { link = 'Boolean' },
  jsTernaryOperator = { link = 'Boolean' },
  jsonQuote = { link = 'Macro' },
  jsoncBoolean = { link = 'Boolean' },
  jsoncBraces = { link = 'LineNr' },
  jsxAttrib = { link = 'Todo' },
  jsxBraces = { link = 'LineNr' },
  jsxCloseComponentName = { link = 'Macro' },
  jsxClosePunct = { link = 'LineNr' },
  jsxCloseString = { link = 'LineNr' },
  jsxCloseTag = { link = 'LineNr' },
  jsxCloseTagName = { link = 'Macro' },
  jsxComponentName = { link = 'Keyword' },
  jsxDot = { link = 'Boolean' },
  jsxEqual = { link = 'LineNr' },
  jsxEscJs = { link = 'Title' },
  jsxExpressionBlock = { link = 'Title' },
  jsxJsBlock = { link = 'Boolean' },
  jsxOpenPunct = { link = 'LineNr' },
  jsxOpenTag = { link = 'LineNr' },
  jsxRegion = { link = 'Todo' },
  jsxString = { link = 'String' },
  jsxTag = { link = 'LineNr' },
  jsxTagName = { link = 'Keyword' },
  luaBraces = { link = 'LineNr' },
  luaBuiltIn = { link = 'Macro' },
  luaComma = { link = 'LineNr' },
  luaCondStart = { link = 'LineNr' },
  luaConstant = { link = 'Boolean' },
  luaErrHand = { link = 'Macro' },
  luaFunc = { link = 'Macro' },
  luaFuncArgsComma = { link = 'LineNr' },
  luaFuncCall = { link = 'Macro' },
  luaFuncName = { link = 'Title' },
  luaFuncParens = { link = 'LineNr' },
  luaFunction = { link = 'Macro' },
  luaFunctionBlock = { link = 'Macro' },
  luaIn = { link = 'Macro' },
  luaKeyword = { link = 'Return' },
  luaLocal = { link = 'Return' },
  luaNoise = { link = 'Boolean' },
  luaOperator = { link = 'Boolean' },
  luaParen = { link = 'LineNr' },
  luaParens = { link = 'LineNr' },
  luaSpecialValue = { link = 'Macro' },
  luaStatement = { link = 'Return' },
  luaString = { link = 'String' },
  luaStringLongTag = { link = 'LineNr' },
  luaSymbolOperator = { link = 'LineNr' },
  luaTable = { link = 'LineNr' },
  luaTableBlock = { link = 'LineNr' },
  mailHeader = { link = 'Boolean' },
  mailHeaderKey = { link = 'Boolean' },
  markdownH1 = { link = 'Macro' },
  markdownLinkText = { link = 'Todo' },
  markdownLinkTextDelimiter = { link = 'LineNr' },
  markdownValid = { link = 'LineNr' },
  mkdNonListItemBlock = { link = 'Boolean' },
  muttrcAliasEncEmail = { link = 'LineNr' },
  muttrcAliasKey = { link = 'Boolean' },
  muttrcAliasNameNoParens = { link = 'Title' },
  muttrcColor = { link = 'Return' },
  muttrcColorLine = { link = 'Return' },
  muttrcEmail = { link = 'Return' },
  muttrcSetStrAssignment = { link = 'Boolean' },
  rubyStringDelimiter = { link = 'String' },
  rustAssert = { link = 'Boolean' },
  rustBoxPlacementBalance = { link = 'Boolean' },
  rustCharacter = { link = 'Boolean' },
  rustConditional = { link = 'Keyword' },
  rustEnumVariant = { link = 'Title' },
  rustFoldBraces = { link = 'LineNr' },
  rustFuncCall = { link = 'Title' },
  rustFuncName = { link = 'Title' },
  rustIdentifier = { link = 'Title' },
  rustKeyword = { link = 'Keyword' },
  rustMacro = { link = 'Return' },
  rustModPath = { link = 'Return' },
  rustModPathSep = { link = 'LineNr' },
  rustOperator = { link = 'LineNr' },
  rustRepeat = { link = 'Keyword' },
  rustSelf = { link = 'Boolean' },
  rustSigil = { link = 'Boolean' },
  rustStorage = { link = 'Keyword' },
  rustStructure = { link = 'Return' },
  rustTrait = { link = 'Macro' },
  rustTypedef = { link = 'Boolean' },
  shDerefSimple = { link = 'Todo' },
  shDo = { link = 'Boolean' },
  shDoubleQuote = { link = 'String' },
  shEcho = { link = 'String' },
  shQuote = { link = 'shDoubleQuote' },
  shStatement = { link = 'Macro' },
  shTestOpr = { link = 'Boolean' },
  shVar = { link = 'Boolean' },
  shVarAssign = { link = 'LineNr' },
  shWrapLineOperator = { link = 'Number' },
  tmuxAssignment = { link = 'LineNr' },
  tmuxFlags = { link = 'Boolean' },
  tmuxFormatString = { link = 'Todo' },
  tmuxOptions = { link = 'Title' },
  tmuxString = { link = 'Todo' },
  tmuxVariableExpansion = { link = 'Return' },
  tmuxVariableExtension = { link = 'Todo' },
  tsxAttrib = { link = 'Todo' },
  tsxCloseComponentName = { link = 'Keyword' },
  tsxCloseString = { link = 'LineNr' },
  tsxCloseTag = { link = 'Keyword' },
  tsxCloseTagName = { link = 'Keyword' },
  tsxEqual = { link = 'LineNr' },
  tsxEscJs = { link = 'Title' },
  tsxIntrinsicTagName = { link = 'Keyword' },
  tsxJsBlock = { link = 'Title' },
  tsxRegion = { link = 'Title' },
  tsxString = { link = 'String' },
  tsxTag = { link = 'LineNr' },
  tsxTagName = { link = 'Keyword' },
  txsRegion = { link = 'LineNr' },
  typescriptArray = { link = 'Title' },
  typescriptArrayMethod = { link = 'Macro' },
  typescriptArrowFunc = { link = 'LineNr' },
  typescriptArrowFuncArg = { link = 'Title' },
  typescriptArrowFuncDef = { link = 'LineNr' },
  typescriptAssign = { link = 'LineNr' },
  typescriptAsyncFuncKeyword = { link = 'Boolean' },
  typescriptBOM = { link = 'Title' },
  typescriptBOMHistoryProp = { link = 'Boolean' },
  typescriptBOMLocationMethod = { link = 'Macro' },
  typescriptBOMWindowMethod = { link = 'Return' },
  typescriptBOMWindowProp = { link = 'Boolean' },
  typescriptBinaryOp = { link = 'Tag' },
  typescriptBlock = { link = 'Title' },
  typescriptBraces = { link = 'LineNr' },
  typescriptCall = { link = 'Todo' },
  typescriptConditional = { link = 'Keyword' },
  typescriptConditionalParen = { link = 'Title' },
  typescriptDOMDocProp = { link = 'Boolean' },
  typescriptDOMWindowProp = { link = 'Boolean' },
  typescriptDefault = { link = 'Return' },
  typescriptDefaultParam = { link = 'LineNr' },
  typescriptDestructureVariable = { link = 'Title' },
  typescriptDomDocProp = { link = 'Boolean' },
  typescriptDotNotation = { link = 'Boolean' },
  typescriptEndColumns = { link = 'LineNr' },
  typescriptEnum = { link = 'Title' },
  typescriptEnumKeyword = { link = 'Macro' },
  typescriptExceptions = { link = 'Boolean' },
  typescriptExport = { link = 'Keyword' },
  typescriptFileReaderProp = { link = 'Boolean' },
  typescriptFuncCallArg = { link = 'Keyword' },
  typescriptFuncComma = { link = 'LineNr' },
  typescriptFuncImpl = { link = 'LineNr' },
  typescriptFuncKeyword = { link = 'Keyword' },
  typescriptFuncName = { link = 'Title' },
  typescriptFuncTypeArrow = { link = 'LineNr' },
  typescriptGlobal = { link = 'Boolean' },
  typescriptHeadersMethod = { link = 'Macro' },
  typescriptIdentifierName = { link = 'Boolean' },
  typescriptImport = { link = 'Keyword' },
  typescriptJSONStaticMethod = { link = 'Boolean' },
  typescriptMathStaticMethod = { link = 'KeywordReturn' },
  typescriptNull = { link = 'Boolean' },
  typescriptObjectColon = { link = 'LineNr' },
  typescriptObjectLabel = { link = 'Todo' },
  typescriptObjectLiteral = { link = 'Macro' },
  typescriptOperator = { link = 'Return' },
  typescriptParenExp = { link = 'Title' },
  typescriptParens = { link = 'LineNr' },
  typescriptPaymentShippingOptionProp = { link = 'Boolean' },
  typescriptProp = { link = 'Boolean' },
  typescriptProperty = { link = 'Boolean' },
  typescriptResponseProp = { link = 'Boolean' },
  typescriptStatementKeyword = { link = 'Return' },
  typescriptStringMethod = { link = 'Macro' },
  typescriptTemplate = { link = 'Boolean' },
  typescriptTemplateSB = { link = 'Tag' },
  typescriptTemplateSubstitution = { link = 'Todo' },
  typescriptTernary = { link = 'Todo' },
  typescriptTernaryOp = { link = 'Boolean' },
  typescriptTry = { link = 'Boolean' },
  typescriptTypeAnnotation = { link = 'LineNr' },
  typescriptTypeBrackets = { link = 'LineNr' },
  typescriptTypeCase = { link = 'Macro' },
  typescriptTypeReference = { link = 'Return' },
  typescriptURLUtilsProp = { link = 'Boolean' },
  typescriptUnaryOp = { link = 'Boolean' },
  typescriptVariable = { link = 'Keyword' },
  typescriptVariableDeclaration = { link = 'Normal' },
  typescriptXHRMethod = { link = 'Macro' },
  variable = { link = 'Title' },
  vimEnvvar = { link = 'Boolean' },
  vimOper = { link = 'Boolean' },
  vimOperParen = { link = 'LineNr' },
  vimUserFunc = { link = 'Boolean' },
  vimVar = { link = 'Todo' },
  xmlEndTag = { link = 'Macro' },
  zshBrackets = { link = 'LineNr' },
  zshCommands = { link = 'Macro' },
  zshDeref = { link = 'Todo' },
  zshFunction = { link = 'Function' },
  zshKeyword = { link = 'Title' },
  zshLineNr = { link = 'LineNr' },
  zshNumber = { link = 'Number' },
  zshOptStart = { link = 'Macro' },
  zshOption = { link = 'Macro' },
  zshParentheses = { link = 'LineNr' },
  zshPrecommand = { link = 'Macro' },
  zshRedirect = { link = 'Todo' },
  zshShortDeref = { link = 'Tag' },
  zshString = { link = 'String' },
  zshStringDelimiter = { link = 'String' },
  zshSubst = { link = 'LineNr' },
  zshSubstDelim = { link = 'Tag' },
  zshTodo = { link = 'Todo' },
  zslhComment = { link = 'Comment' },
}
