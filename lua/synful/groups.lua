-- As of neovim 0.10 new highlight definitions are designed to be more compatible with upstream treesitter definitions. See: https://neovim.io/doc/user/treesitter.html#treesitter-highlight-groups
local colour = require("synful.colour")

return {
	Boolean = { fg = colour.mauve },
	Changed = { fg = colour.slate },
	Character = { fg = colour.mauve, italic = true },
	CmpItemAbbrMatch = { fg = colour.metal, bold = true },
	CmpItemAbbrMatchDefault = { fg = colour.royal },
	CmpItemAbbrMatchFuzzy = { fg = colour.metal },
	CmpItemAbbrMatchFuzzyDefault = { fg = colour.royal },
	CmpItemKind = { link = "Boolean" },
	CmpItemKindColor = { fg = colour.rouge },
	CmpItemKindMatchFuzzy = { fg = colour.royal },
	CmpItemMenu = { fg = colour.pearl },
	CodeiumSuggestion = { link = "Comment" },
	ColorColumn = { link = "NonText" },
	Command = { fg = colour.slate, bold = true },
	Comment = { fg = colour.raven, italic = true },
	Conceal = { link = "Comment" },
	Conditional = { link = "Character" },
	Constant = { link = "Macro" },
	CurSearch = { fg = colour.ultra, bg = colour.mauve },
	Cursor = { fg = colour.slate, bg = colour.mauve },
	CursorLine = { bg = colour.depth },
	CursorLineNr = { fg = colour.slate },
	Debug = { link = "Boolean" },
	Define = { link = "Macro" },
	Delimiter = { link = "LineNr" },
	DiagnositicSignInfo = { bg = colour.raven },
	DiagnosticError = { link = "Error" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { link = "CursorLineNr" },
	DiagnosticInformation = { link = "CursorLineNr" },
	DiagnosticUnderlineError = { fg = colour.blush, undercurl = true },
	DiagnosticUnderlineHint = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnnecessary = { link = "LineNr" },
	DiagnosticVirtualTextError = { fg = colour.blush, bg = colour.rouge },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.raven },
	DiagnosticVirtualTextWarn = { fg = colour.peach, bg = colour.amber },
	DiagnosticWarn = { link = "Tag" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	Directory = { fg = colour.steel, bold = true },
	EndOfBuffer = { link = "StatusLineNC" },
	Error = { fg = colour.blush },
	ErrorMsg = { fg = colour.blush },
	Exception = { link = "Macro" },
	Field = { link = "Normal" },
	FlashBackdrop = { link = "Delimiter" },
	FlashLabel = { fg = colour.ultra, bg = colour.steel, bold = true },
	Float = { link = "Boolean" },
	FloatBorder = { fg = colour.raven, bg = "NONE" },
	FloatShadow = { link = "NonText" },
	FloatShadowThrough = { link = "NonText" },
	FoldColumn = { link = "FloatBorder" },
	Folded = { link = "Comment" },
	Function = { fg = colour.metal, bold = true },
	GitGutterAdd = { link = "Return" },
	GitGutterChange = { link = "Macro" },
	GitGutterChangeDelete = { link = "Tag" },
	GitGutterDelete = { link = "Boolean" },
	Identifier = { link = "Normal" },
	Ignore = { link = "Comment" },
	IncSearch = { link = "Visual" },
	Include = { link = "Macro" },
	Italic = { italic = true },
	Keyword = { link = "Macro" },
	KeywordFunction = { link = "Macro" },
	KeywordReturn = { link = "Return" },
	Label = { link = "Macro" },
	LazyButton = { fg = colour.royal, bg = colour.depth },
	LazyCommit = { link = "Boolean" },
	LazyDimmed = { link = "Tag" },
	LazyNormal = { link = "Pmenu" },
	LazyProp = { link = "Boolean" },
	LineNr = { fg = colour.raven },
	Macro = { fg = colour.metal },
	MatchParen = { fg = colour.blush, bold = true },
	NoiceCmdlinePopupBorder = { link = "FloatBorder" },
	Noise = { link = "LineNr" },
	NonText = { fg = "NONE", bg = "NONE" },
	Normal = { fg = colour.pearl },
	NormalFloat = { link = "Pmenu" },
	NotifyBackground = { bg = "NONE" },
	NotifyDEBUGBody = { fg = colour.blush },
	NotifyDEBUGBorder = { link = "FloatBorder" },
	NotifyDEBUGIcon = { link = "Commment" },
	NotifyDEBUGTitle = { link = "Commment" },
	NotifyERRORBody = { fg = colour.pearl },
	NotifyERRORBorder = { link = "FloatBorder" },
	NotifyERRORIcon = { fg = colour.blush },
	NotifyERRORTitle = { fg = colour.blush },
	NotifyINFOBody = { link = "Normal" },
	NotifyINFOBorder = { link = "FloatBorder" },
	NotifyINFOIcon = { fg = colour.paris },
	NotifyINFOTitle = { fg = colour.paris },
	NotifyTRACEBody = { fg = colour.pearl },
	NotifyTRACEBorder = { link = "FloatBorder" },
	NotifyTRACEIcon = { fg = colour.ultra },
	NotifyTRACETitle = { fg = colour.ultra },
	NotifyWARNBody = { link = "Normal" },
	NotifyWARNBorder = { link = "FloatBorder" },
	NotifyWARNIcon = { fg = colour.peach },
	NotifyWARNTitle = { fg = colour.peach },
	Number = { link = "Boolean" },
	NvimInternalError = { link = "Error" },
	Operator = { link = "@comment" },
	Pmenu = { fg = colour.slate },
	PmenuSbar = { fg = colour.steel, bg = colour.depth },
	PmenuSel = { bg = colour.steel, fg = colour.capri },
	PmenuThumb = { fg = colour.space, bg = colour.space },
	PreProc = { fg = colour.slate },
	Quote = { link = "Macro" },
	Repeat = { link = "Macro" },
	Return = { fg = colour.olive, bold = true },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	SignColumn = { link = "@comment" },
	Special = { link = "Macro" },
	SpecialChar = { link = "Boolean" },
	SpecialComment = { link = "Comment" },
	SpecialKey = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	SpellCap = { link = "@comment" },
	Statement = { link = "Return" },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	String = { fg = colour.paris },
	Tag = { fg = colour.amber },
	TargetWord = { fg = colour.capri },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopeMatching = { link = "Todo" },
	TelescopeNormal = { link = "Normal" },
	TelescopePreviewMatch = { link = "MatchParen" },
	TelescopePromptPrefix = { link = "Boolean" },
	TelescopePromptTitle = { link = "Macro" },
	TelescopeSelection = { bg = colour.raven },
	TelescopeSelectionCaret = { link = "PmenuSel" },
	Title = { link = "Normal" },
	Todo = { fg = colour.royal, bold = true },
	Type = { fg = colour.slate, italic = true },
	Visual = { fg = colour.capri, bg = colour.steel, bold = true },
	Whitespace = { fg = colour.space },
	WildMenu = { fg = colour.blush, bg = colour.rouge },
	WinBar = { link = "LineNr" },
	WinBarNC = { fg = colour.raven },
	["@constructor.lua"] = { link = "LineNr" },
	["@keyword.conditional.lua"] = { fg = colour.mauve },
	["@keyword.function.lua"] = { link = "Macro" },
	["@keyword.lua"] = { fg = colour.olive },
	["@keyword.return.lua"] = { link = "Return" },
	["@operator.lua"] = { link = "Operator" },
	["@variable"] = { link = "Normal" },
	constructor = { fg = colour.steel, bold = true },
	cssAttrRegion = { link = "Todo" },
	cssBraces = { link = "LineNr" },
	cssClassName = { link = "Macro" },
	cssClassNameDot = { link = "Boolean" },
	cssTagName = { link = "Boolean" },
	htmlTag = { link = "LineNr" },
	htmlTagName = { link = "Macro" },
	keyword = { fg = colour.olive, bold = true },
	tsxAttrib = { fg = colour.capri },
	tsxCloseComponentName = { link = "Keyword" },
	tsxCloseString = { link = "LineNr" },
	tsxCloseTag = { link = "Delimiter" },
	tsxCloseTagName = { link = "Tag" },
	tsxEqual = { link = "LineNr" },
	tsxIntrinsicTagName = { link = "tsxTagName" },
	tsxJsBlock = { link = "Normal" },
	tsxRegion = { link = "Normal" },
	tsxString = { link = "String" },
	tsxTag = { link = "Comment" },
	tsxTagName = { fg = colour.steel, bold = true },
	typescriptArray = { link = "Normal" },
	typescriptArrowFunc = { link = "LineNr" },
	typescriptArrowFuncArg = { link = "Normal" },
	typescriptArrowFuncDef = { link = "Comment" },
	typescriptAssign = { link = "LineNr" },
	typescriptAsyncFuncKeyword = { link = "Character" },
	typescriptBOMHistoryProp = { fg = colour.mauve, italic = true },
	typescriptBinaryOp = { link = "Number" },
	typescriptBlock = { link = "Normal" },
	typescriptBraces = { link = "LineNr" },
	typescriptCall = { link = "Todo" },
	typescriptConditional = { link = "Boolean" },
	typescriptDefault = { link = "Return" },
	typescriptDotNotation = { link = "Boolean" },
	typescriptFuncCallArg = { fg = colour.slate, italic = true },
	typescriptFuncKeyword = { link = "Macro" },
	typescriptIdentifierName = { link = "Boolean" },
	typescriptMember = { link = "Normal" },
	typescriptMemberOptionality = { link = "Boolean" },
	typescriptObjectColon = { link = "LineNr" },
	typescriptObjectLabel = { link = "TargetWord" },
	typescriptObjectLiteral = { link = "LineNr" },
	typescriptOperator = { fg = colour.bazil, italic = true },
	typescriptParens = { link = "LineNr" },
	typescriptProp = { link = "Boolean" },
	typescriptProperty = { link = "Boolean" },
	typescriptTemplate = { link = "Tag" },
	typescriptTemplateSB = { link = "Tag" },
	typescriptTemplateSubstitution = { link = "Todo" },
	typescriptTernaryOp = { link = "Tag" },
	typescriptTypeAnnotation = { link = "Comment" },
	typescriptTypeBracket = { link = "LineNr" },
	typescriptTypeBrackets = { fg = colour.steel },
	typescriptTypeArguments = { fg = colour.steel },
	typescriptPredefinedType = { fg = colour.royal },
	typescriptVariable = { link = "Macro" },
	typescriptAliasKeyword = { link = "Macro" },
	typescriptArrayMethod = { link = "Macro" },
	-- typescriptBOM = { link = "Normal" },
	-- typescriptBOMLocationMethod = { link = "Macro" },
	-- typescriptBOMWindowMethod = { link = "Return" },
	-- typescriptBOMWindowProp = { link = "Boolean" },
	-- typescriptConditionalParen = { link = "Todo" },
	-- typescriptDOMDocProp = { link = "Boolean" },
	-- typescriptDOMFormProp = { fg = colour.slate },
	-- typescriptDOMWindowProp = { link = "Boolean" },
	-- typescriptDefaultParam = { link = "@comment" },
	-- typescriptDestructureVariable = { link = "Normal" },
	-- typescriptDomDocProp = { link = "Boolean" },
	-- typescriptEndColumns = { link = "Comment" },
	-- typescriptEnum = { link = "Normal" },
	-- typescriptEnumKeyword = { link = "Macro" },
	-- typescriptExceptions = { link = "Boolean" },
	-- typescriptExport = { link = "Keyword" },
	-- typescriptFileReaderProp = { link = "Boolean" },
	-- typescriptFuncCallArg = { link = "Macro" },
	-- typescriptFuncComma = { link = "Comment" },
	-- typescriptFuncImpl = { link = "Comment" },
	-- typescriptFuncName = { fg = colour.slate, bold = true },
	-- typescriptFuncTypeArrow = { link = "Comment" },
	-- typescriptGlobal = { link = "Keyword" },
	-- typescriptHeadersMethod = { link = "Macro" },
	-- typescriptImport = { link = "Macro" },
	-- typescriptJSONStaticMethod = { link = "Boolean" },
	-- typescriptMathStaticMethod = { link = "KeywordReturn" },
	-- typescriptNull = { link = "Boolean" },
	-- typescriptParenExp = { link = "Normal" },
	-- typescriptPaymentShippingOptionProp = { link = "Boolean" },
	-- typescriptResponseProp = { link = "Boolean" },
	-- typescriptStatementKeyword = { link = "Return" },
	-- typescriptStringMethod = { link = "Macro" },
	-- typescriptTry = { link = "Boolean" },
	-- typescriptTypeCase = { link = "Macro" },
	-- typescriptTypeReference = { link = "Return" },
	-- typescriptURLUtilsProp = { link = "Boolean" },
	-- typescriptUnaryOp = { link = "Boolean" },
	-- typescriptVariableDeclaration = { link = "Normal" },
	-- typescriptXHRMethod = { link = "Macro" },
	variable = { link = "Normal" },
	vimEnvvar = { link = "Boolean" },
	vimUserFunc = { link = "Normal" },
	-- DefinitionCount = { link = "Delimiter" },
	-- DefinitionIcon = { link = "Macro" },
	-- DiffChange = { link = "@comment" },
	-- DiffDelete = { link = "Boolean" },
	-- DiffText = { link = "Macro" },
	-- LspFloatWinBorder = { link = "FloatBorder" },
	-- LspFloatWinNormal = { bg = colour.space },
	-- LspSagaBorderTitle = { fg = colour.paris },
	-- LspSagaCodeActionBorder = { link = "FloatBorder" },
	-- LspSagaCodeActionContent = { link = "Delimiter" },
	-- LspSagaCodeActionTitle = { link = "Delimiter" },
	-- LspSagaDefPreviewBorder = { link = "FloatBorder" },
	-- LspSagaFinderSelection = { link = "Delimiter" },
	-- LspSagaHoverBorder = { link = "FloatBorder" },
	-- LspSagaRenameBorder = { link = "FloatBorder" },
	-- LspSagaSignatureHelpBorder = { link = "FloatBorder" },
	-- MiniCursorword = { bg = colour.blush },
	-- MiniCursorwordCurrent = { bg = colour.mauve },
	-- PreCondit = { link = "@comment" },
	-- ReferencesCount = { link = "Delimiter" },
	-- ReferencesIcon = { link = "Delimiter" },
	-- SpellLocal = { link = "Tag" },
	-- SpellRare = { link = "Macro" },
	-- StatusLine = { link = "NonText" },
	-- StorageClass = { link = "Boolean" },
	-- Structure = { link = "Normal" },
	-- Substitute = { link = "Normal" },
	-- TabLine = { link = "@comment" },
	-- TabLineFill = { link = "Normal" },
	-- TabLineSel = { link = "mailSubject" },
	-- Typedef = { link = "@comment" },
	-- Underlined = { fg = colour.blush },
	-- VertSplit = { link = "NonText" },
	-- VisualNOS = { link = "Normal" },
	-- WarningMsg = { link = "@comment" },
	-- ["@comment"] = { fg = colour.raven },
	-- ["@comment.documentation"] = { link = "Comment" },
	-- ["@comment.error"] = { link = "Error" },
	-- ["@comment.note"] = { link = "Return" },
	-- ["@comment.todo"] = { link = "Todo" },
	-- ["@comment.warning"] = { link = "Tag" },
	-- ["@constant.builtin.lua"] = { link = "Boolean" },
	-- ["@keyword.conditional.ternary"] = { link = "Tag" },
	-- ["@keyword.operator.lua"] = { link = "Boolean" },
	-- ["@punctuation.bracket"] = { link = "@comment" },
	-- ["@punctuation.bracket.lua"] = { link = "@comment" },
	-- ["@punctuation.delimiter"] = { link = "Delimiter" },
	-- ["@punctuation.special"] = { link = "@comment" },
	-- ["@spell"] = { fg = colour.ashen },
	-- ["@string.special.path"] = { link = "@keyword.lua" },
	-- ["@string.special.url"] = { fg = colour.royal, italic = true },
	-- ["@tag"] = { fg = colour.steel, bold = true },
	-- ["@tag.attribute"] = { fg = colour.capri },
	-- ["@tag.builtin"] = { link = "@tag" },
	-- ["@tag.delimiter"] = { link = "@comment" },
	-- cssAtKeyword = { link = "Tag" },
	-- cssBackgroundProp = { link = "Normal" },
	-- cssBorderProp = { link = "Normal" },
	-- cssBoxProp = { link = "Normal" },
	-- cssColorProp = { link = "Normal" },
	-- cssDefinition = { link = "Normal" },
	-- cssFlexibleBoxProp = { link = "Normal" },
	-- cssFontAttr = { link = "Todo" },
	-- cssFontProp = { link = "Normal" },
	-- cssFunctionName = { link = "Todo" },
	-- cssGradientAttr = { link = "Todo" },
	-- cssIEUIProp = { link = "Normal" },
	-- cssIdentifier = { link = "Todo" },
	-- cssInteractProp = { link = "Normal" },
	-- cssListProp = { link = "Normal" },
	-- cssMediaProp = { link = "Normal" },
	-- cssNoise = { link = "@comment" },
	-- cssPageProp = { link = "Normal" },
	-- cssPositioningProp = { link = "Normal" },
	-- cssPseudoClass = { link = "@comment" },
	-- cssPseudoClassId = { link = "Todo" },
	-- cssTextProp = { link = "Normal" },
	-- cssTransformProp = { link = "Normal" },
	-- cssTransitionProp = { link = "Normal" },
	-- cssUIProp = { link = "Normal" },
	-- cssVendor = { link = "Boolean" },
	-- diffAdded = { link = "KeywordReturn" },
	-- diffRemoved = { link = "Boolean" },
	-- gitcommitBranch = { link = "Boolean" },
	-- gitcommitComment = { link = "Comment" },
	-- gitcommitDiscarded = { link = "@comment" },
	-- gitcommitDiscardedArrow = { link = "Boolean" },
	-- gitcommitDiscardedFile = { link = "Boolean" },
	-- gitcommitDiscardedType = { link = "Boolean" },
	-- gitcommitNoBranch = { link = "Boolean" },
	-- gitcommitOverflow = { link = "Boolean" },
	-- gitcommitSelected = { link = "@comment" },
	-- gitcommitSelectedArrow = { link = "KeywordReturn" },
	-- gitcommitSelectedFile = { link = "KeywordReturn" },
	-- gitcommitSelectedType = { link = "KeywordReturn" },
	-- gitcommitSummary = { link = "Normal" },
	-- gitcommitUnmerged = { link = "KeywordReturn" },
	-- gitcommitUnmergedArrow = { link = "@comment" },
	-- gitcommitUnmergedFile = { link = "@comment" },
	-- gitcommitUntracked = { link = "@comment" },
	-- gitcommitUntrackedFile = { link = "Macro" },
	-- htmlArg = { link = "Todo" },
	-- htmlEndTag = { link = "@comment" },
	-- htmlHead = { link = "Macro" },
	-- htmlSpecialTagName = { link = "Macro" },
	-- htmlTagN = { link = "Macro" },
	-- jsonBraces = { link = "@comment" },
	-- jsonQuote = { link = "Macro" },
	-- jsoncBoolean = { link = "Boolean" },
	-- jsoncBraces = { link = "@comment" },
	-- mailEmail = { link = "Boolean" },
	-- mailHeader = { link = "LineNr" },
	-- mailHeaderEmail = { link = "Boolean" },
	-- mailHeaderKey = { link = "LineNr" },
	-- mailSubject = { fg = colour.slate, bold = true },
	-- muttrcAliasEncEmail = { link = "@comment" },
	-- muttrcAliasKey = { link = "@comment" },
	-- muttrcAliasNameNoParens = { link = "Normal" },
	-- muttrcColor = { link = "Return" },
	-- muttrcColorLine = { link = "Return" },
	-- muttrcEmail = { link = "Return" },
	-- muttrcSetStrAssignment = { link = "Boolean" },
	-- shDerefSimple = { link = "Todo" },
	-- shDo = { link = "Boolean" },
	-- shDoubleQuote = { link = "String" },
	-- shEcho = { link = "String" },
	-- shQuote = { link = "shDoubleQuote" },
	-- shStatement = { link = "Macro" },
	-- shTestOpr = { link = "Boolean" },
	-- shVar = { link = "Boolean" },
	-- shVarAssign = { link = "@comment" },
	-- shWrapLineOperator = { link = "Number" },
	-- tmuxAssignment = { link = "@comment" },
	-- tmuxFlags = { link = "Boolean" },
	-- tmuxFormatString = { link = "Todo" },
	-- tmuxOptions = { link = "Normal" },
	-- tmuxString = { link = "Todo" },
	-- tmuxVariableExpansion = { link = "Return" },
	-- tmuxVariableExtension = { link = "Todo" },
	-- vimOper = { link = "Boolean" },
	-- vimOperParen = { link = "@comment" },
	-- vimVar = { link = "Todo" },
	-- xmlEndTag = { link = "Macro" },
	-- zshBrackets = { link = "@comment" },
	-- zshCommands = { link = "Macro" },
	-- zshDeref = { link = "Todo" },
	-- zshFunction = { fg = colour.peach },
	-- zshKeyword = { link = "Normal" },
	-- zshLineNr = { link = "@comment" },
	-- zshNumber = { link = "Number" },
	-- zshOptStart = { link = "Macro" },
	-- zshOption = { link = "Macro" },
	-- zshParentheses = { link = "@comment" },
	-- zshPrecommand = { link = "Macro" },
	-- zshRedirect = { link = "Todo" },
	-- zshShortDeref = { link = "Tag" },
	-- zshString = { link = "String" },
	-- zshStringDelimiter = { link = "String" },
	-- zshSubst = { link = "@comment" },
	-- zshSubstDelim = { link = "Tag" },
	-- zshTodo = { link = "Todo" },
	-- zslhComment = { link = "Comment" },
}

-- @keyword.conditional.lua
