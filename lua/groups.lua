local colour = require("colour")

return {
	Boolean = { fg = colour.mauve },
	Character = { link = "Boolean" },
	Command = { fg = colour.slate, bold = true },
	Comment = { fg = colour.raven, bold = true, italic = true },
	Conditional = { link = "Character" },
	Constant = { link = "Macro" },
	CurSearch = { fg = colour.ultra, bg = colour.mauve },
	Cursor = { fg = colour.pearl, bg = colour.coola },
	CursorLine = { bg = colour.depth },
	CursorLineNr = { fg = colour.coola, bold = true },
	DiagnositicSignInfo = { bg = colour.raven },
	DiagnosticError = { link = "Error" },
	DiagnosticHint = { link = "Boolean" },
	DiagnosticInfo = { link = "Changed" },
	DiagnosticInformation = { link = "Changed" },
	DiagnosticUnderlineError = { fg = colour.blush, undercurl = true },
	DiagnosticUnderlineHint = { fg = colour.paris, undercurl = true },
	DiagnosticUnderlineInfo = { fg = colour.metal, undercurl = true },
	DiagnosticUnderlineWarn = { fg = colour.amber, undercurl = true },
	DiagnosticUnnecessary = { fg = colour.raven, undercurl = true },
	DiagnosticVirtualTextError = { fg = colour.blush, bg = colour.rouge },
	DiagnosticVirtualTextHint = { fg = colour.paris, bg = colour.bazil },
	DiagnosticVirtualTextInfo = { fg = colour.capri, bg = colour.raven },
	DiagnosticVirtualTextWarn = { fg = colour.peach, bg = colour.amber },
	DiagnosticWarn = { link = "Tag" },
	DiagnosticWarning = { link = "DiagnosticWarn" },
	Directory = { fg = colour.steel, bold = true },
	Error = { fg = colour.blush },
	ErrorMsg = { link = "Error" },
	Float = { link = "Boolean" },
	FloatBorder = { fg = colour.depth, bg = "NONE" },
	FloatShadow = { link = "NonText" },
	FloatShadowThrough = { link = "NonText" },
	FoldColumn = { link = "FloatBorder" },
	Folded = { fg = colour.raven, italic = true, bold = true },
	IncSearch = { link = "String" },
	Label = { link = "Macro" },
	LineNr = { fg = colour.raven },
	Macro = { fg = colour.metal },
	MatchParen = { fg = colour.coola, bold = true },
	Menu = { fg = colour.metal, bg = colour.depth },
	NonText = { fg = "NONE", bg = "NONE" },
	Normal = { fg = colour.pearl },
	NormalFloat = { link = "Pmenu" },
	Number = { link = "Boolean" },
	Pmenu = { fg = colour.ghost, bg = "NONE" },
	PmenuSbar = { fg = colour.raven, bg = colour.depth },
	PmenuSel = { fg = colour.slate, bg = colour.raven },
	PmenuThumb = { fg = colour.raven, bg = colour.depth },
	Search = { fg = colour.capri, bg = colour.steel, bold = true },
	Special = { link = "Macro" },
	SpellBad = { link = "Boolean" },
	StatusLine = { bg = colour.depth },
	StatusLineNC = { fg = colour.space, bg = "NONE" },
	String = { fg = colour.paris, italic = true },
	Title = { link = "Type" },
	Type = { fg = colour.slate },
	Visual = { bg = colour.depth, fg = colour.coola },
	WarningMsg = { link = "Tag", italic = true },
	Whitespace = { fg = colour.space },
	WildMenu = { link = "MatchParen" },
	["@character.printf"] = { fg = colour.amber },
	["@comment"] = { link = "Comment" },
	["@constructor"] = { link = "LineNr" },
	["@function"] = { link = "Command" },
	["@function.builtin"] = { fg = colour.metal, bold = true },
	["@function.call.lua"] = { fg = colour.metal, bold = true },
	["@function.method"] = { fg = colour.royal, bold = true },
	["@function.method.call.lua"] = { link = "Command" },
	["@keyword"] = { fg = colour.metal },
	["@keyword.coroutine.tsx"] = { link = "Boolean" },
	["@keyword.lua"] = { fg = colour.olive, bold = true },
	["@keyword.return.lua"] = { fg = colour.bazil, bold = true },
	["@keyword.return.tsx"] = { fg = colour.bazil, bold = true },
	["@keyword.tsx"] = { link = "@keyword.lua" },
	["@markup.heading.1"] = { link = "Macro" },
	["@markup.heading.2"] = { link = "LineNr" },
	["@markup.raw.block.markdown"] = { link = "Type" },
	["@module.builtin.lua"] = { fg = colour.slate },
	["@operator"] = { link = "LineNr" },
	["@property"] = { link = "Type" },
	["@punctuation"] = { link = "LineNr" },
	["@punctuation.delimiter"] = { link = "LineNr" },
	["@punctuation.special.markdown"] = { link = "LineNr" },
	["@string.css"] = { link = "boolean" },
	["@tag"] = { link = "LineNr" },
	["@tag.attribute.tsx"] = { fg = colour.capri },
	["@tag.builtin"] = { fg = colour.steel, bold = true },
	["@tag.css"] = { link = "Boolean" },
	["@tag.tsx"] = { fg = colour.steel, bold = true },
	["@type"] = { link = "Normal" },
	["@type.builtin"] = { fg = colour.paris },
	["@type.css"] = { link = "Macro" },
	["@variable"] = { link = "Normal" },
	["@variable.member"] = { fg = colour.capri },
	keyword = { link = "Macro" },
	tmuxOptions = { link = "Normal" },
	-- Added = { fg = colour.olive, bold = true },
	-- Changed = { link = "Type" },
	-- ColorColumn = { link = "NonText" },
	-- Conceal = { link = "Comment" },
	-- Debug = { link = "Boolean" },
	-- Define = { link = "Macro" },
	-- Delimiter = { link = "LineNr" },
	-- DiffChange = { link = "LineNr" },
	-- EndOfBuffer = { link = "StatusLineNC" },
	-- Exception = { link = "Macro" },
	-- Field = { link = "Normal" },
	-- Identifier = { link = "Normal" },
	-- Ignore = { fg = colour.ultra },
	-- Include = { link = "Macro" },
	-- Italic = { italic = true },
	-- KeywordFunction = { link = "Macro" },
	-- Noise = { link = "Boolean" },
	-- NvimInternalError = { link = "Error" },
	-- Operator = { link = "LineNr" },
	-- PreProc = { link = "Type" },
	-- Quote = { link = "Macro" },
	-- Removed = { fg = colour.rouge },
	-- Repeat = { link = "Macro" },
	-- SignColumn = { link = "LineNr" },
	-- SpecialChar = { link = "Boolean" },
	-- SpecialComment = { link = "Comment" },
	-- SpecialKey = { link = "Macro" },
	-- SpellCap = { link = "LineNr" },
	-- Statement = { link = "@keyword.return.tsx" },
	-- Tag = { fg = colour.amber },
	-- TargetWord = { fg = colour.capri },
	-- Todo = { fg = colour.royal, bold = true },
	-- WinBar = { link = "LineNr" },
	-- WinBarNC = { link = "LineNr" },
	-- WinSeparator = { fg = colour.steel },
	-- ["@comment.documentation"] = { link = "Comment" },
	-- ["@comment.error"] = { link = "Error" },
	-- ["@comment.note"] = { link = "@keyword.return.tsx" },
	-- ["@comment.todo"] = { link = "Todo" },
	-- ["@comment.warning"] = { link = "Tag" },
	-- ["@constructor.lua"] = { link = "LineNr" },
	-- ["@function.call.typscript"] = { link = "@function" },
	-- ["@function.lua"] = { link = "Command" },
	-- ["@function.method.call.tsx"] = { link = "@function" },
	-- ["@function.method.tsx"] = { link = "@function.tsx" },
	-- ["@function.tsx"] = { fg = colour.slate, bold = true },
	-- ["@function.typescript"] = { link = "@function" },
	-- ["@keyword.conditional.lua"] = { link = "Boolean" },
	-- ["@keyword.function.lua"] = { link = "Macro" },
	-- ["@keyword.function.tsx"] = { link = "Macro" },
	-- ["@keyword.import.tsx"] = { link = "Macro" },
	-- ["@keyword.import.typescript"] = { link = "Macro" },
	-- ["@keyword.repeat.lua"] = { link = "Added" },
	-- ["@keyword.return.lua"] = { link = "@keyword.return.tsx" },
	-- ["@keyword.tsx"] = { link = "Macro" },
	-- ["@keyword.typescript"] = { link = "Macro" },
	-- ["@operator.lua"] = { link = "LineNr" },
	-- ["@property.json"] = { fg = colour.capri },
	-- ["@tag.builtin.tsx"] = { fg = colour.steel, bold = true },
	-- ["@tag.delimiter.tsx"] = { link = "LineNr" },
	-- ["@text.uri"] = { fg = colour.steel, underline = true },
	-- ["@variable.lua"] = { link = "Normal" },
	-- ["@variable.member.typescript"] = { fg = colour.capri },
	-- ["@variable.typescript"] = { link = "Normal" },
	-- constructor = { fg = colour.steel, italic = true },
	-- htmlTag = { link = "LineNr" },
	-- htmlTagName = { link = "Macro" },
	-- keyword = { fg = colour.olive, bold = true },
	-- markdownCodeBlock = { fg = colour.olive },
	-- markdownH1 = { link = "LineNr" },
	-- markdownH2 = { link = "LineNr" },
	-- markdownItalic = { link = "String" },
	-- markdownRule = { link = "LineNr" },
	-- muttrcCommand = { link = "Macro" },
	-- shDerefSimple = { fg = colour.royal },
	-- shQuote = { link = "String" },
	-- tmuxCommands = { link = "Macro" },
	-- tmuxFlags = { link = "Boolean" },
	-- tmuxFormatString = { link = "Todo" },
	-- tmuxString = { link = "String" },
	-- tmuxVariableExpansion = { fg = colour.royal },
	-- variable = { link = "Normal" },
	-- vimEnvvar = { link = "Boolean" },
	-- vimOper = { link = "Boolean" },
	-- vimOperParen = { link = "LineNr" },
	-- vimUserFunc = { link = "Normal" },
	-- vimVar = { link = "TargetWord" },
	-- zshCommands = { link = "Macro" },
}
